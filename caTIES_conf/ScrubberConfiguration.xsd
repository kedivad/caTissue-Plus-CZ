<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 rel. 3 U (http://www.altova.com) by Andrew McMurry (Harvard Medical School) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="ScrubberConfiguration">
		<xs:annotation>
			<xs:documentation>Defines Scrubber and Recorder rules</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ScrubberImplementation" type="xs:string">
					<xs:annotation>
						<xs:documentation>Type of scrubber to construct (TEXT or XML_TEXT)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TextProcessingRules">
					<xs:annotation>
						<xs:documentation>Defines rules for text scrubbing</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:choice maxOccurs="unbounded">
							<xs:element name="SavedIdentifiers" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>List of known identifiers to remove. May include names, places, states, list of hospitals, etc.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Label">
											<xs:annotation>
												<xs:documentation>Type of identifier, such as "NAMES"</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="FileLocation">
											<xs:annotation>
												<xs:documentation>Where this list of identifiers can be found. Identifiers are listed in an unstructured file ONE per line. </xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ReplaceWith">
											<xs:annotation>
												<xs:documentation>Replace all matches with this  label. For instance "MatchedName"</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="CaseSensitive" type="xs:boolean" default="false">
											<xs:annotation>
												<xs:documentation>Boolean indicating that the text matches must be an exact match or case insensitive match. </xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RegularExpressions" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>List of regular expressions used to remove identifying text.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="FileLocation">
											<xs:annotation>
												<xs:documentation>Location where the Regular Expressions may be found. Regular expressions are listed ONE PER LINE in the format KEY=VALUE where KEY is the regex name and VALUE is the regular expression. Value may contain the equals character. Single line comments beginning with "//" are allowed for documenting the regex file. </xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ReplaceWith">
											<xs:annotation>
												<xs:documentation>characters to write in the scrubbed report in place of the identifier. For example "xxx"</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="PrintRegexNameInResult">
											<xs:annotation>
												<xs:documentation>Boolean indicating that the regular expression name should be written in the scrubbed report, surrounded by the "ReplaceWith" characters.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name="XMLTextProcessingRules" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Defines rules for scrubbing XML files. These rules extend TextProcessingRules. </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Validation" minOccurs="0">
								<xs:annotation>
									<xs:documentation>XML Validation</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="EnableValidation" type="xs:boolean" default="true">
											<xs:annotation>
												<xs:documentation>Boolean indicating that the each XML file should be validated against the input schema.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="SchemaLocation" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Location of the INPUT schema for validation.
Note, this is the schema of the INPUT files, not the configuration file.
Again, if you want to use input validation it must match YOUR input schema. 	
</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="IdentifyingRegions" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Regions deliberately containing identifiers which must be removed elsewhere  from the input.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Region" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Label">
														<xs:annotation>
															<xs:documentation>Name denoting the kind of identifer, for example "accession number"</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="XPATH">
														<xs:annotation>
															<xs:documentation>Location where the identifer(s) are located. This XPATH will be traversed recursively for XMLText (Text or CDATA) and each word token will be indexed.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ReplaceWith">
														<xs:annotation>
															<xs:documentation>Replace matches of this type with these characters. For instance "xxxAccessionNumberxxx"</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="CaseSensitive" type="xs:boolean" default="false">
														<xs:annotation>
															<xs:documentation>boolean indicating that the text comparison should be case sensitive or not. </xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RegionsToScrub">
								<xs:annotation>
									<xs:documentation>Regions inside the XML input file to REMOVE identifeirs from. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Region" maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Label">
														<xs:annotation>
															<xs:documentation>Name denoting the location to scrub. For example, "DiagnosisText"</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="XPATH">
														<xs:annotation>
															<xs:documentation>Location to scrub identifiers from. This XPATH will be traversed recursively for XMLText (Text or CDATA) and each identifer match will be removed from the report.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Recorder">
					<xs:annotation>
						<xs:documentation>Defines a recorder which captures the identifier matches</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Implementation" type="xs:string">
								<xs:annotation>
									<xs:documentation>Type of recorder: FILE_WRITER, LOG4J, or JDBC. This can easily be extended. </xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="EnableRecording" type="xs:boolean" default="true">
								<xs:annotation>
									<xs:documentation>boolean indicating that recorder matches should be saved or ignored.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ConfigParam" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Recorder configuration properties</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="key" use="required"/>
									<xs:attribute name="value" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
