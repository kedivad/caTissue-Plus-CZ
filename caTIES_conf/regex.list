//Patient's Name
PATIENT_NAME=[^a-z^A-Z^0-9]+(((patient(')?(s)?)\s+(name))[^a-z^A-Z^0-9^\"]+(is)?\"\w+[^a-z^A-Z]+\w+[^a-z^A-Z]+)

//all ages 10-100 divisible by 10 (was writtenAge1)
WRITTEN_AGE_10_100_DIV10=(\s)+([Tt][Ee][Nn]|[Tt][Ww][Ee][Nn][Tt][Yy]|[Tt][hH][iI][Rr][Tt][Yy]|[Ff][Oo][Rr][Tt][Yy]|[Ff][Ii][Ff][Tt][Yy]|[Ss][Ii][Xx][Tt][Yy]|[Ss][Ee][Vv][Ee][Nn][Tt][Yy]|[Ee][Ii][Gg][Hh][Tt][Yy]|[Nn][Ii][Nn][Ee]?[Tt][Yy]|[Hh][Uu][Nn][Dd][Rr][Ee][Dd])[-\s]?((y(ea)?rs?)|(months?)|(days?)|(weeks?)|(wks?\.?))(\s+((old)|(of\s+age)))?\s

//all ages from 110 to 119 (was writtenAge2)
WRITTEN_AGE_110_TO_119=\s+([Oo][Nn][Ee])?\s+[Hh][Uu][Nn][Dd][Rr][Ee][Dd][-\s]?([Tt][Ee][Nn]|[Ee][Ll][Ee][Vv][Ee][Nn]|[Tt][Ww][Ee][Ll][Vv][Ee]|[Tt][Hh][Ii][Rr][Tt][Ee][Ee][Nn]|[Ff][Oo][Uu][Rr][Tt][Ee][Ee][Nn]|[Ff][Ii][Ff][Tt][Ee][Ee][Nn]|[sS][Ii][Xx][Tt][Ee][Ee][Nn]|[Ss][Ee][Vv][Ee][Nn][Tt][Ee][Ee][Nn]|[Ee][Ii][Gg][Hh][Tt][Ee][Ee][Nn]|[Nn][Ii][Nn][Ee][Tt][Ee][Ee][Nn])?[-\s]?((y(ea)?rs?)|(months?)|(days?)|(weeks?)|(wks?\.?))(\s+((old)|(of\s+age)))?\s

//All ages from 20-99. (was writtenAge4)
WRITTEN_AGE_20_TO_99=(\s)(([Tt][Ww][Ee][Nn][Tt][Yy])|([Tt][hH][iI][Rr][Tt][Yy])|[Ff]orty|[Ff]ifty|[Ss]ixty|[Ss]eventy|[Ee]ighty|[Nn]ine?ty)[-\s]?([Oo][Nn][Ee]|[Tt][Ww][Oo]|[Tt][Hh][Rr][Ee][Ee]|[Ff][Oo][Uu][Rr]|[Ff][Ii][Vv][Ee]|[sS][Ii][Xx]|[Ss][Ee][Vv][Ee][Nn]|[Ee][Ii][Gg][Hh][Tt]|[Nn][Ii][Nn][Ee])?[-\s]?(([yY](ea)?rs?)|([Mm]onths?)|([Dd]ays?)|([Ww]eeks?)|([Ww]ks?\.?))(\s+(([Oo]ld)|([Oo]f\s+[Aa]ge)))?\s

//All ages from 1-19 (was writtenAge5)
WRITTEN_AGE_1_TO_19=\s((aged|AGED)?(\s+)?([Oo][Nn][Ee]|[Tt][Ww][Oo]|[Tt][Hh][Rr][Ee][Ee]|[Ff][Oo][Uu][Rr]|[Ff][Ii][Vv][Ee]|[sS][Ii][Xx]|[Ss][Ee][Vv][Ee][Nn]|[Ee][Ii][Gg][Hh][Tt]|[Nn][Ii][Nn][Ee]|[Tt][Ee][Nn]|[Ee][Ll][Ee][Vv][Ee][Nn]|[Tt][Ww][Ee][Ll][Vv][Ee]|[Tt][Hh][Ii][Rr][Tt][Ee][Ee][Nn]|[Ff][Oo][Uu][Rr][Tt][Ee][Ee][Nn]|[Ff][Ii][Ff][Tt][Ee][Ee][Nn]|[sS][Ii][Xx][Tt][Ee][Ee][Nn]|[Ss][Ee][Vv][Ee][Nn][Tt][Ee][Ee][Nn]|[Ee][Ii][Gg][Hh][Tt][Ee][Ee][Nn]|[Nn][Ii][Nn][Ee][Tt][Ee][Ee][Nn]))[-\s]?((y(ea)?rs?)|(months?)|(days?)|(weeks?)|(wks?\.?))(\s+((old)|(of\s+age)))?\s

//same as patient name except to take out names that come after "labeled"
LABELED_NAME=[^a-z^A-Z^0-9]+(label(l)?ed[^a-z^A-Z^0-9^\"]+\"[^a-z^A-Z^0-9]?([a-zA-Z]+[^a-z^A-Z^0-9]+){3})

//supposed to match email addresses.Taken from Regexlib.com. Can an email start with a non-alphanumeric?
EMAIL_ADDRESS=([a-zA-Z0-9_\-])+(\.([a-zA-Z0-9_\-])+)*@((\[(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5])))\.(((([0-1])?([0-9])?[0-9])|(2[0-4][0-9])|(2[0-5][0-5]))\]))|((([a-zA-Z0-9])+(([\-])+([a-zA-Z0-9])+)*\.)+([a-zA-Z])+(([\-])+([a-zA-Z0-9])+)*))

//Take out any telephone numbers
TELEPHONE=[^a-z^A-Z^0-9]+\(?[1-9][0-9]{2}[\)\s-]?[1-9][0-9]{2}[\s-]?[0-9]{4}\s+

// this line looks for DR|doctor followed by up to six "words"
DOCTOR=[^a-z^A-Z^0-9]+(([dD][Rr]([Ss])?)|([Dd]octor)s?|(DOCTORS?))[.](\s+)?([A-Z]([a-zA-Z]+)?([^a-z^A-Z^0-9]+|(and)|(AND))+){1,8}

//put the older Dr regex. this should be a safety net incase the above regex is not satisfied.
DOCTOR_OLDER=[^a-z^A-Z^0-9]+(([dD][Rr]([Ss])?)|([Dd]octor)s?|(DOCTORS?))[^a-zA-Z^0-9]+(\w+[^a-z^A-Z^0-9]+){1,3}

//matches IP address except of the form [1200.5.4.3], [abc.def.ghi.jkl], [255.foo.bar.1] .Taken from regexlib.com
IP=(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])

//This is a new facility regex and should be executed before the following facilitynameregex
FACILITY=[^a-z^A-Z^0-9]+(of|OF|from|FROM|to|TO|BY|by|for|FOR|AT|at|label(l)?ed|LABEL(L)?ED|IN|in|with|WITH)[^a-z^A-Z^0-9]+([A-Z][a-zA-Z]+[^a-z^A-Z^0-9]+){1,6}((Medical\s+Center)|(Hospital)|(HOSPITAL)|(HEALTH\s+CENTER)|(INC)|(Inc)|(Health\s+Center)|(Health\s+Services)|(HEALTH\s+SERVICES)|(Clinic)s?|([dD]iagnostics)|(DIAGNOSTICS)|(Laboratories)|(LABORATORIES)|(LABORATORY)|([lL]aboratory)|(MEDICAL\s+CENTER)|(MEDICAL\s+ASSOCIATES)|(IMPATH)|(PERMANENTE)|(INSTITUTE)|(impath)|(permanente)|(institute)|(medical\s+associates))[^a-z^A-Z^0-9]+([A-Z][a-zA-Z]+[^a-z^A-Z^0-9]+){0,4}

// this set of line looks for health facility names and takes out up to four words before the key word
FACILITY_NAME=[^a-z^A-Z^0-9]+([^ ]+\s+){1,4}((Medical\s+Center)|(Hospital)|(HOSPITAL)|(HEALTH\s+CENTER)|(INC)|(Inc)|(Health\s+Center)|(Health\s+Services)|(HEALTH\s+SERVICES)|(Clinic)s?|([dD]iagnostics)|(DIAGNOSTICS)|(Laboratories)|(LABORATORIES)|(LABORATORY)|([lL]aboratory)|(MEDICAL\s+CENTER)|(CLINIC)S?|(MEDICAL\s+ASSOCIATES)|(IMPATH)|(PERMANENTE)|(INSTITUTE)|(impath)|(permanente)|(institute)|(Medical\s+Associates))[^a-z^A-Z]+([A-Z][a-z]+[^a-z^A-Z^0-9]+){0,4}

//(regexp ) Take out any dates in the format M/D/YY , M/D/YYYY, mm/dd/yyyy , mm/dd/yy , dd/mm/yy ,dd/mm/yyyy.The separator can be any of the following characters : ".","/","-"
DATE_SEPERATORS=[^a-z^A-Z^0-9][0-3]?[0-9][-./][0-3]?[0-9][-./][0-9]{2,4}[^a-z^A-Z^%]+

//To take out date of the form yyyy/m/d or yyyy/mm/dd or yyyy/mm/d or yyyy/m/dd
DATE=[^a-z^A-Z^0-9]\d{4}[-./][0-3]?[0-9][-./][0-3]?[0-9]

//take out dates of the form mm/yyyy or mm/yy
DATE2=[^a-z^A-Z^0-9]([1][0-9]|0?[1-9])[-/](19|20)?[0-9]{2}[^a-z^A-Z^%]+

//take out any year of the form 19-- or 20--
YEAR_CENTURY=[^a-z^A-Z^0-9](19|20)[0-9]{2}[^a-z^A-Z^0-9]

// this looks for key words to identify accession numbers by the word accession or any abbreviated form
ACCESSION=[^a-z^A-Z^.](([Aa][Cc][Cc]\.?)|([Aa][Cc][Cc][Ee][Ss][Ss][Ii][Oo][Nn])|([Cc][Aa][Ss][Ee]))[^A-Z^a-z^0-9]+(([Nn][Uu][Mm]\.?)|(#)|[Nn]number|NUMBER)[^A-Z^a-z^0-9]+[a-zA-Z]{1,3}[0-9]{1,12}[a-zA-Z]{0,3}[^A-Z^a-z^0-9]

//takes care of odd accession  numbers not caught by the above regex . These incl. the following egs. 1) a11a11111
ACCESSION_ODD=[^a-z^A-Z^.][a-zA-Z]{1,2}\d{1,5}[-.\s:]?[a-zA-Z]{1,3}\d{1,5}([-.\s:]\d{1,3})?[^a-z^A-Z^0-9]

// this looks for many common accession number forms ( THE SCRUBBED FILE WAS PRODUCED BY ANOTHER VERSION WHICH HAD THE FOLLOWING REGEX STARTING WITH [^A-Z^a-z^.]
ACCESSION_NUMBER=[^a-z^A-Z^.]([A-Z]{0,3}[0-9]{1,5}[-:.\s])?[A-Z]{1,2}[0-9]{1,4}[-.:][A-Z]{0,3}[0-9]{0,7}[A-Z]{0,2}[^a-z^A-Z^%]([0-9][^a-z^A-Z^%])?(^cm^gm(s)?^gram(s)?^x)?

//takes care of accession numbers of the form a1234556 - wht abt 00:SP15432:--it takes out :SP15432:
ACCESSION_NEW=[^a-z^A-Z^.][0-9]{0,3}[^a-z^A-Z^.]?[a-zA-Z]{1,3}\d{1,7}[^a-z^A-Z^0-9]

//the following regex does this --- any number may be followed by an alpha(to take care of 200A longwood ave) ,followed by a space,one or more words separated by space and followed by one of the list of synonyms for street which is followed by a space or a comma .
ADDRESS=[^a-z^A-Z][0-9]{1,6}(\w+)?\s(\w+\s)+([sS]t|[sS]treet|[aA]venue|[aA]ve|[Bb]lvd|[bB]oulevard|[sS]uite|[pP]ark|[dD]rive|[dD]r|[lL]ane|[lL]n|[Ww]ay|[Pp]ky|[pP]arkway|[Rr]oute|rt|RT|Rt|[rR]oad|[rR]d|[pP]ass|Square|Sq|[Pp]laza|[lL]ink|[bB]end|[gG]ardens|[cC]ircle|[rR]ow|[tT]urn|[hH]wy|[hH]ighway|[cC]ir|[cC]ourt|[cC]rossing|[tT]rail|[rR]un|[pP]ike|[tT]errace|Place|[pP]l|[lL]oop|[pP]arade|[aA]lley)[^A-Za-z]?(\.)?[\s,]?([A-Z][a-zA-Z]+[^a-z^A-Z^0-9]+){1,5}((\d{5}(-)\d{4})|(\d{5}))?[^a-z^A-Z^0-9]?

//This will match all words followed by one or more hyphens or spaces and a 5 digit or a 5-4 digit number. Cross check this with the state database to see if it matches any state name or state abbr. If it does , remove.
ADDRESS2=[^a-z^A-Z]\w+[\s,-]+((\d{5}(-)\d{4})|(\d{5}))[^a-z^A-Z]

//This should take out any mention of age followed by woman/man/male/female/m/f
//([Mm](ale)?|[Ff](emale)?|[Ww](oman)?|[Mm](an)?)
AGE=[^a-z^A-Z^0-9]([0-9]{1,3}[^a-z^A-Z^0-9]+([Mm](ale)?|[Ff](emale)?|[Ww](oman)?|[Mm](an)?|([Yy]/[Oo]))[^a-z^A-Z^0-9])

//this works to take out any mention of the age.(or of this form -- "aged over 50"
AGED_OVER=[^a-z^A-Z^0-9](([Aa]ged?|AGED?)([^a-z^A-Z^0-9](over)[^a-z^A-Z^0-9]+)?[0-9]{1,3}[^a-z^A-Z^0-9])

AGE2=[^a-z^A-Z^0-9]([0-9]{1,3}[^a-z^A-Z^0-9](([yY](ea)?rs?)|([Ww]eeks?)|([Dd]ays?)|([Mm]onths?)|(MONTHS?)|(Y(EA)?RS?)|(WEEKS?)|(DAYS?)))

//Take out any 5 numbers-4 numbers since they are assumed to be zip codes
ZIP_CODE=[^a-z^A-Z^0-9](\d{5}(-)\d{4})

//Take out any 4 digit numbers that look like 19.. or 20.. These are assumed to be 4 digit years.
YEAR=[^a-z^A-Z^0-9](19|20)[0-9]{2}\s

//take out any 2 digit numbers which start with a single quote.
YEAR_TWO_DIGIT=[^a-z^A-Z^0-9]\'[0-9][0-9]\s

HOSPITAL=[^a-z^A-Z^0-9]((BIDMC)|(Beth\s+Israel\s+Deaconess?\s+Medical?\s+Center?)|(HMFP)|(MGH)|(BWH)|(DFCI)|(BID)|(MEEI)|(HCHP)|(HPHC))

//this line looks for up to four "words" before MT and one word after it (for specialty qualifications)
SPECIALTY_QUAALIFICATIONS=[^a-z^A-Z^0-9]+([^ ]+\s+){1,4}M[.]? ?T[.]?\s+[^ ]+\s

// this next set of lines look for a string with exactly four "words" before MD/DO/PHD/MS/
// consider adding other degree types - eg english types, PA, NP, MA, RN etc
DEGREE=[^a-z^A-Z^0-9]+([A-Z]+[^a-z^A-Z^0-9]+){1,4}((M(.)?D(.)?)|(D(.)?O(.)?)|(Ph(.)?D(.)?)|(M(.)?S(.)?)|(M(.)?T(.)?))[^a-z^A-Z^0-9]

// note that these come after the other known identifiers like pt ssn, acc num, etc
SSN=[^a-z^A-Z^0-9]+[0-9]{3}-[0-9]{2}-[0-9]{4}

//suspicious number 4-15 digits
SUSPICIOUS_NUM=[^a-z^A-Z^0-9]+[0-9]{5,15}[^a-z^A-Z]

//This matches 4 words after received from ,labeled ,patients name etc. It is assumed that the words following the mentioned keywords are not already removed.
SPECIAL_WORDS=[^a-z^A-Z^0-9]([Rr]eviewed by|[Cc]alled to|[Rr]eported to)\s+([a-zA-Z]+([^a-z^A-Z^0-9]+|(and)|(AND))){1,4}

//Match all words with O' or Mc
SPECIAL_NAMES=[^a-z^A-Z^0-9](O\\'|M[Aa]?[cC])\\w+[^a-z^A-Z^0-9]?

//Match all jr and sr
TITLES=[^a-z^A-Z^0-9]+([Jj][rR]|[Ss][rR])\.?[^a-z^A-Z^0-9]?

//Match all roman numeral III
TITLE_THIRD=[^a-z^A-Z^0-9]+(^[Pp]art|^[Gg]rade):?\s+III\.?