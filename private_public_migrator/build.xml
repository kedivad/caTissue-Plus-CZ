<?xml version ="1.0"?>

<!--Ant Script for caTIES-->

<project name="Private_Public" >
	<property file="privatePublic.properties" />
	<!--define require dir and Properties -->	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${basedir}/lib/ant-contrib.jar" />
		</classpath>
	</taskdef>
	
	<property name="base.dir" value="."/>	
	<property name="classes.dir" value="./classes" />
	<property name="mysql.dao.prop.filename" value="MySQLDAOProperties.xml" />
	<property name="oracle.dao.prop.filename" value="OracleDAOProperties.xml" />
	<property name="oracle.driver.string" value="oracle.jdbc.driver.OracleDriver" />
	<property name="mysql.driver.string" value="org.gjt.mm.mysql.Driver" />
	<tstamp>
		<format property="TODAY" pattern="ddMMyyyy_hhmmss" />
	</tstamp>
  
	<property name="drop.oracle.staging.db" value="sqlplus ${stagingSystemUserName}/${stagingSystemPassword}@${stagingDBName}  @.//sql//drop_staging_db_oracle.sql" />
	<property name="create.oracle.staging.db" value="impdp ${stagingSystemUserName}/${stagingSystemPassword}@${stagingDBName} remap_schema=${privateDBUserName}:${stagingDBUserName} directory=data_pump_dir dumpfile=catissue_${TODAY}.dmp logfile=imp parallel=4 transform=oid:n @@TABLESPACE@@" />
	<property name="create.oracle.private.dump" value="expdp ${stagingSystemUserName}/${stagingSystemPassword}@${stagingDBName} schemas=${privateDBUserName} directory=data_pump_dir dumpfile=catissue_${TODAY}.dmp logfile=catissueexp.log" />
	
	<property name="drop.mysql.staging.db" value="cmd /c mysql -u ${privateDBUserName} -p${privateDBPassword} -h ${privateDBHost} -P ${privateDBPort} &lt;./sql/drop_staging_db_mysql.sql" />
	<property name="create.mysql.staging.db" value="cmd /c mysql -u ${stagingDBUserName} -p${stagingDBPassword} -h ${privateDBHost} -P ${privateDBPort} ${stagingDBName}&lt;privatedump_${TODAY}.sql" />
	<property name="create.mysql.private.dump" value="cmd /c mysqldump -u ${privateDBUserName} -p${privateDBPassword} -h ${privateDBHost} -P ${privateDBPort} ${privateDBName}&gt;privatedump_${TODAY}.sql" />
	
	<property name="drop.oracle.public.db" value="sqlplus ${publicSystemUserName}/${publicSystemPassword}@${publicDBTNSName} @.//sql//drop_public_db_oracle.sql" />
	<property name="create.oracle.public.db" value="imp ${publicSystemUserName}/${publicSystemPassword}@${publicDBTNSName} fromuser=${stagingDBUserName} touser=${publicDBUserName} file=public_${TODAY}.dmp" />
	<property name="create.oracle.public.dump" value="exp ${stagingSystemUserName}/${stagingSystemPassword}@${stagingDBName} owner=${stagingDBUserName} file=public_${TODAY}.dmp" />
	<property name="configure.masking" value="${privateDBUserName}/${privateDBPassword}@${privateDBName}"/>
	
	<property name="drop.mysql.public.db" value="cmd /c mysql -u ${publicDBUserName} -p${publicDBPassword} -h ${publicDBHost} -P ${publicDBPort} &lt;./sql/drop_public_db_mysql.sql" />
	<property name="create.mysql.public.db" value="cmd /c mysql -u ${publicDBUserName} -p${publicDBPassword} -h ${publicDBHost} -P ${publicDBPort} ${publicDBName}&lt;publicdump_${TODAY}.sql" />
	<property name="create.mysql.public.dump" value="cmd /c mysqldump -u ${stagingDBUserName} -p${stagingDBPassword} -h ${privateDBHost} -P ${privateDBPort} ${stagingDBName}&gt;publicdump_${TODAY}.sql" />
	
	
	<target name="generate_command_file" depends="replaceToken">
		<copy file="./conf/commands.properties" todir="${basedir}" overwrite="true"/>
		<if>
			<equals arg1="${databaseType}" arg2="oracle" />
			<then>
				<replace file="${basedir}/commands.properties">
					<replacefilter token="@@DROP_STAGING_DB@@" value="${drop.oracle.staging.db}" />
					<replacefilter token="@@CREATE_PRIVATE_DUMP@@" value="${create.oracle.private.dump}" />
					<replacefilter token="@@CREATE_STAGING_DB@@" value="${create.oracle.staging.db}" />
					
					<replacefilter token="@@DROP_PUBLIC_DB@@" value="${drop.oracle.public.db}" />
					<replacefilter token="@@CREATE_STAGING_DUMP@@" value="${create.oracle.public.dump}" />
					<replacefilter token="@@CREATE_PUBLIC_DB@@" value="${create.oracle.public.db}" />
					
				</replace>
				<if>
					<equals arg1="${privateDBTablespace}" arg2="${privateDBIndexTablespace}" />
					<then>
						<replace file="${basedir}/commands.properties">
							<replacefilter token="@@TABLESPACE@@" value=" remap_tablespace=${privateDBTablespace}:users " />
						</replace>
					</then>
					<else>
						<replace file="${basedir}/commands.properties">
							<replacefilter token="@@TABLESPACE@@" value=" remap_tablespace=${privateDBTablespace}:users remap_tablespace=${privateDBIndexTablespace}:users " />
						</replace>
					</else>
				</if>
				<if>
					<equals arg1="${databaseType}" arg2="mysql" />
					<then>
						<replace file="${basedir}/commands.properties">
							
						</replace>
					</then>
				</if>
			</then>
		</if>
		<if>
			<equals arg1="${databaseType}" arg2="mysql" />
			<then>
				<replace file="${basedir}/commands.properties">
					<replacefilter token="@@DROP_STAGING_DB@@" value="${drop.mysql.staging.db}" />
					<replacefilter token="@@CREATE_PRIVATE_DUMP@@" value="${create.mysql.private.dump}" />
					<replacefilter token="@@CREATE_STAGING_DB@@" value="${create.mysql.staging.db}" />
					
					<replacefilter token="@@DROP_PUBLIC_DB@@" value="${drop.mysql.public.db}" />
					<replacefilter token="@@CREATE_STAGING_DUMP@@" value="${create.mysql.public.dump}" />
					<replacefilter token="@@CREATE_PUBLIC_DB@@" value="${create.mysql.public.db}" />
				</replace>
			</then>
		</if>
	</target>

	<target name="compile">
		<javac destdir="${classes.dir}" includes="**/*.java" includeAntRuntime="false">
			<src path="${basedir}"/>
			<classpath>
			  <fileset dir="${basedir}">
					<include name="**/*.jar"/>
			  </fileset>
			</classpath>
		</javac>
	</target>
	<target name="runAdditionalMasking">
			<echo message="${configure.masking}" />
			<if>
					<equals arg1="${databaseType}" arg2="mysql" />
					<then>
						<sql onerror="stop" keepformat="true"
							driver="${mysql.driver.string}"
							url="jdbc:mysql://${param1}:${param2}/${param3}"
							userid="${param4}"
							password="${param5}">
								<classpath refid="cp1"/>
								<transaction   src="${basedir}/sql/mask.sql"/>
						</sql> 
					</then>
			</if>
			<if>
				<equals arg1="${databaseType}" arg2="oracle" />
				<then>
					<sql onerror="stop" keepformat="true"
	                    driver="oracle.jdbc.driver.OracleDriver"
		                url="jdbc:oracle:thin:@${param1}:${param2}:${param3}" 
		                userid="${param4}" 
		                password="${param5}">
	                        <classpath refid="cp1"/>
	                        <transaction   src="${basedir}/sql/mask.sql"/>
	                </sql> 
				</then>
			</if>
	</target>

		<target name="dropTempTable">
			<echo message="dropTempTable" />
			<!--
			<if>
				<equals arg1="${databaseType}" arg2="mysql" />
				<then>
					<sql onerror="stop" keepformat="true" delimiter="/"
						driver="${mysql.driver.string}"
						url="jdbc:mysql://${param1}:${param2}/${param3}"
						userid="${param4}"
						password="${param5}" >
							<classpath refid="cp1"/>
							<transaction   src="${basedir}/sql/mask_proc.sql"/>
					</sql> 
				</then>
			</if>
			-->	
			<if>
				<equals arg1="${databaseType}" arg2="oracle" />
				<then>
	          	  <sql onerror="stop" keepformat="true" delimiter="/"
	                driver="oracle.jdbc.driver.OracleDriver" 
	                url="jdbc:oracle:thin:@${param1}:${param2}:${param3}" 
	                userid="${param4}" 
	                password="${param5}" >
	            		<classpath refid="cp1"/>
	              		<transaction   src="${basedir}/sql/mask_proc.sql"/>
	        	  </sql>
			   </then>
			</if>
		</target>	
	<path id="cp1">
		<fileset dir="${basedir}/lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="migrate" depends="compile" > 
		<java classname="edu.wustl.catissuecore.privatepublicmigrator.PrivateToPublicMigrator" maxmemory="1024m" fork="true">
			<classpath>
				<pathelement location="${classes.dir}"/>
				<pathelement location="."/>
			</classpath>
			<classpath refid="cp1"/>
		</java>
		<antcall target="dropTempTable">
			<param name="param1" value="${publicDBHost}"/>
			<param name="param2" value="${publicDBPort}"/>
			<param name="param3" value="${publicDBName}"/>
			<param name="param4" value="${publicDBUserName}"/>
			<param name="param5" value="${publicDBPassword}"/>
		</antcall>
		<antcall target="runAdditionalMasking">
			<param name="param1" value="${publicDBHost}"/>
			<param name="param2" value="${publicDBPort}"/>
			<param name="param3" value="${publicDBName}"/>
			<param name="param4" value="${publicDBUserName}"/>
			<param name="param5" value="${publicDBPassword}"/>
		</antcall>
	</target>

	<target name="maskData" depends="compile" >
			<java classname="edu.wustl.catissuecore.privatepublicmigrator.MaskData" maxmemory="1024m" fork="true">
				<classpath>
					<pathelement location="${classes.dir}"/>
					<pathelement location="."/>
				</classpath>
				<classpath refid="cp1"/>
			</java>
		<antcall target="dropTempTable">
			<param name="param1" value="${stagingDBHost}"/>
			<param name="param2" value="${stagingDBPort}"/>
			<param name="param3" value="${stagingDBName}"/>
			<param name="param4" value="${stagingDBUserName}"/>
			<param name="param5" value="${stagingDBPassword}"/>
		</antcall>
		<antcall target="runAdditionalMasking">
			<param name="param1" value="${stagingDBHost}"/>
			<param name="param2" value="${stagingDBPort}"/>
			<param name="param3" value="${stagingDBName}"/>
			<param name="param4" value="${stagingDBUserName}"/>
			<param name="param5" value="${stagingDBPassword}"/>
		</antcall>
	</target>
	
	<target name="replaceToken" >
		<copy file="./conf/hibernate.cfg.xml" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/DynamicExtensionsHibernate.cfg.xml" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/MySQLDAOProperties.xml" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/OracleDAOProperties.xml" todir="${classes.dir}" overwrite="true" />
		
		<copy file="./conf/OracleDataSourceDAOProperties.xml" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/ApplicationResources.properties" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/ApplicationResources_cs_CZ.properties" todir="${classes.dir}" overwrite="true" />
		<copy file="./conf/DynamicExtensionDAO.properties" todir="${classes.dir}" overwrite="true" />
		<if>
			<equals arg1="${databaseType}" arg2="mysql"/>
			<then>
				<replace dir="${classes.dir}">
						<replacefilter token="@@JDBC_DRIVER@@" value="com.mysql.jdbc.Driver" />
						<replacefilter token="@@CONNECTION_URL@@" value="jdbc:mysql://${stagingDBHost}:${stagingDBPort}/${stagingDBName}" />
						<replacefilter token="@@USER_NAME@@" value="${stagingDBUserName}" />
						<replacefilter token="@@PASSWORD@@" value="${stagingDBPassword}" />
				</replace>
				<replace file="${basedir}/ApplicationDAOProperties.xml">
					<replacefilter token="${oracle.dao.prop.filename}" value="${mysql.dao.prop.filename}" />
				</replace>
				<copy file="./conf/drop_staging_db_mysql.sql" todir="${basedir}/sql" overwrite="true" />
				<copy file="./conf/drop_public_db_mysql.sql" todir="${basedir}/sql" overwrite="true" />
			</then>
		</if>
		
		
		<if>
			<equals arg1="${databaseType}" arg2="oracle"/>
			
			<then>
				<replace dir="${classes.dir}">
						<replacefilter token="org.hibernate.dialect.MySQLDialect" value="org.hibernate.dialect.Oracle9Dialect" />
						<replacefilter token="@@JDBC_DRIVER@@" value="oracle.jdbc.driver.OracleDriver" />
						<replacefilter token="@@CONNECTION_URL@@" value="jdbc:oracle:thin:@${stagingDBHost}:${stagingDBPort}:${stagingDBName}" />
						<replacefilter token="@@USER_NAME@@" value="${stagingDBUserName}" />
						<replacefilter token="@@PASSWORD@@" value="${stagingDBPassword}" />
				</replace>
				<replace file="${basedir}/ApplicationDAOProperties.xml">
					<replacefilter token="${mysql.dao.prop.filename}" value="${oracle.dao.prop.filename}" />
				</replace>
				<copy file="./conf/drop_staging_db_oracle.sql" todir="${basedir}/sql" overwrite="true" />
				<copy file="./conf/drop_public_db_oracle.sql" todir="${basedir}/sql" overwrite="true" />
			</then>
		</if>
		<replace dir="${basedir}/sql">
			<include name="**/*.sql" />
				<replacefilter token="@@STAGING_DB_NAME@@" value="${stagingDBName}" />
				<replacefilter token="@@STAGING_DB_USER_NAME@@" value="${stagingDBUserName}" />
				<replacefilter token="@@STAGING_DB_PASSWORD@@" value="${stagingDBPassword}" />
				<replacefilter token="@@STAGING_DB_HOST@@" value="${stagingDBHost}" />

				<replacefilter token="@@PUBLIC_DB_NAME@@" value="${publicDBName}" />
				<replacefilter token="@@PUBLIC_DB_USER_NAME@@" value="${publicDBUserName}" />
				<replacefilter token="@@PUBLIC_DB_PASSWORD@@" value="${publicDBPassword}" />
				<replacefilter token="@@PUBLIC_DB_HOST@@" value="${publicDBHost}" />
			</replace>
	</target>
</project>