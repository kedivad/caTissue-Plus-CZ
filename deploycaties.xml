<?xml version ="1.0"?>
<!--Ant Script for caTIES installation-->

<project name="caTIES Installation" default="deploy_caties">
	<!--define require dir and Properties -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<property file="deploycaties.properties" />
	<property file="caTissueInstall.properties" />

	<property name="base.dir" value="." />
	<property name="temp.dir" value="./tempCatissuecore" />
	<property name="temp.caties.dir" value="./tempCaties" />
	<property name="lib.dir" value="${base.dir}/lib" />

	<condition property="deidentifier.selected" value="deploy_deid_server" >
		<equals arg1="${install.deid.deidentifier}" arg2="yes" casesensitive="false" />
	</condition>
	<condition property="deidentifier.selected" value="deploy_harvardscrubber_server" >
		<equals arg1="${install.harvardscrubber.deidentfier}" arg2="yes" casesensitive="false" />
	</condition>
	<condition property="deidentifier.selected" value="deploy_donothing_server" >
		<equals arg1="${install.donothing.deidentifier}" arg2="yes" casesensitive="false" />
	</condition>
	<condition property="deidentifier.selected" value="deploy_custom_server" >
		<equals arg1="${install.custom.deidentifier}" arg2="yes" casesensitive="false" />
	</condition>

	<target name="assertforcaties">
		<!-- Assertions common to all server-->
		<if>
			<equals arg1="" arg2="${first.admin.emailAddress}" />
			<then>
				<fail message="The property 'first.admin.emailAddress' can not be empty in caTissueInstall.properties" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${first.admin.password}" />
			<then>
				<fail message="The property 'first.admin.password' can not be empty in caTissueInstall.properties" />
			</then>
		</if>
		<if>
			<equals arg1="" arg2="${jboss.server.host}" />
			<then>
				<fail message="The property 'jboss.server.host' can not be empty in caTissueInstall.properties" />
			</then>
		</if>
		<!--<if>
			<equals arg1="" arg2="${jboss.server.port}" />
			<then>
				<fail message="The property 'jboss.server.port' can not be empty in caTissueInstall.properties" />
			</then>
		</if>-->
		<!-- Assertions for add collection protocol-->
		<if>
			<equals arg1="yes" arg2="${add.default.collection.protocol}" />
			<then>
				<if>
					<equals arg1="" arg2="${collection.protocol.title}" />
					<then>
						<fail message="The property 'collection.protocol.title' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${site.name}" />
					<then>
						<fail message="The property 'site.name' can not be empty" />
					</then>
				</if>
			</then>
		</if>
		<!-- Assertions for report loader server-->
		<if>
			<equals arg1="yes" arg2="${install.report.loader.server}" />
			<then>
				<if>
					<equals arg1="" arg2="${report.loader.installation.dir}" />
					<then>
						<fail message="The property 'report.loader.installation.dir' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${collection.protocol.title}" />
					<then>
						<fail message="The property 'collection.protocol.title' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${input.files.dir}" />
					<then>
						<fail message="The property 'input.files.dir' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${bad.files.dir}" />
					<then>
						<fail message="The property 'bad.files.dir' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${process.file.dir}" />
					<then>
						<fail message="The property 'process.file.dir' can not be empty" />
					</then>
				</if>
			</then>
		</if>

		<!-- Assertions for concept coder server -->
		<if>
			<equals arg1="yes" arg2="${install.concept.code.server}" />
			<then>
				<if>
					<equals arg1="" arg2="${concept.code.installation.dir}" />
					<then>
						<fail message="The property 'concept.code.installation.dir' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${jboss.server.host}" />
					<then>
						<fail message="The property 'jboss.server.host' can not be empty in caTissueInstall.properties" />
					</then>
				</if>
				<!--<if>
					<equals arg1="" arg2="${jboss.server.port}" />
					<then>
						<fail message="The property 'jboss.server.port' can not be empty in caTissueInstall.properties" />
					</then>
				</if>-->
				<if>
					<equals arg1="" arg2="${caties.mmtx.home}" />
					<then>
						<fail message="The property 'caties.mmtx.home' can not be empty in caTissueInstall.properties" />
					</then>
				</if>
			</then>
		</if>
		<!-- Assertions for deidentifier server -->
		<antcall target="assertfordeidentifier" />

	</target>


	<target name="assertfordeidentifier">
		<!-- Assertions for deidentifier server -->
		<if>
			<equals arg1="yes" arg2="${install.deidentifier.server}" />
			<then>
				<if>
					<equals arg1="" arg2="${deidentifier.installation.dir}" />
					<then>
						<fail message="The property 'deidentifier.installation.dir' can not be empty" />
					</then>
				</if>
				<if>
					<equals arg1="" arg2="${deidentifier.selected}"/>
					<then>
						<fail message="Please select one of the deidentifer to install" />
					</then>
				</if>
				<if>
					<equals arg1="yes" arg2="${install.deid.deidentifier}"/>
					<then>
						<if>
							<equals arg1="" arg2="${deid.home}"/>
							<then>
								<fail message="The property 'deid.home' can not be empty" />
							</then>
						</if>
						<if>
							<equals arg1="" arg2="${deid.dny.folder}"/>
							<then>
								<fail message="The property 'deid.dny.folder' can not be empty" />
							</then>
						</if>
					</then>
				</if>
			</then>
		</if>
	</target>

	<!--Target call for Deployment of caTIES -->
	<target name="deploy_caties"  >
		<antcall target="assertforcaties" />
		<antcall target="create_jar" />
		<antcall target="replacefiletoken" />
		<antcall target="deploy_caties_internal" />
		<delete dir="${temp.dir}" />
		<delete dir="${temp.caties.dir}" />
		<delete file="${base.dir}/caties.jar" />
	</target>

	<target name="create_jar" >
		<unwar src="${base.dir}/catissuecore.war" dest="${temp.dir}/catissuecore" />
		<copy todir="${temp.caties.dir}/classes">
			<fileset dir="${temp.dir}/catissuecore/WEB-INF/classes" />
		</copy>
		<delete file="${temp.caties.dir}/classes/log4j.properties" />
		<jar destfile="${temp.caties.dir}/caties.jar" basedir="${temp.caties.dir}/classes" />
		<delete dir="${temp.caties.dir}/classes" />
	</target>

	<target name="replacefiletoken">
		<copy file="${basedir}/caTIES_conf/caTIES.properties" todir="${temp.caties.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/build.xml" todir="${temp.caties.dir}/caTIES_conf" overwrite="true" />
		<copy file="${base.dir}/caTIES_conf/remoteService.xml" todir="${temp.caties.dir}/caTIES_conf" overwrite="true" />
		<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
			<replacefilter token="@@COLL_PROT_TITLE@@" value="${collection.protocol.title}" />
			<replacefilter token="@@SITE_NAME@@" value="${site.name}" />
			<replacefilter token="@@ADMIN_EMAIL@@" value="${first.admin.emailAddress}" />
			<replacefilter token="@@ADMIN_PASSWORD@@" value="${first.admin.password}" />
			<replacefilter token="@@INPUT_FILES_DIR@@" value="${input.files.dir}" />
			<replacefilter token="@@BAD_FILES_DIR@@" value="${bad.files.dir}" />
			<replacefilter token="@@PROCESS_FILES_DIR@@" value="${process.file.dir}" />
			<replacefilter token="@@GATE_HOME@@" value="${concept.code.installation.dir}/gate/gate_3_1" />
		</replace>
		<property name="jboss.server.host.jboss.server.port" value="${jboss.server.host}:${jboss.server.port}" />
		<if>
			<equals arg1="" arg2="${jboss.server.port}" />
			<then>
				<var name="jboss.server.host.jboss.server.port" unset="true"/>
				<property name="jboss.server.host.jboss.server.port" value="${jboss.server.host}" />
			</then>
		</if>
		<if>
			<equals arg1="${jboss.container.secure}" arg2="yes" />
			<then>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@HOST:PORT@@" value="https://${jboss.server.host.jboss.server.port}" />
					<replacefilter token="@@KEYSTORE_FILE_PATH@@" value="${keystore.file.path}" />
				</replace>
			</then>
			<else>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@HOST:PORT@@" value="http://${jboss.server.host.jboss.server.port}" />
				</replace>
			</else>
		</if>
		<antcall target="replacedeidentfierrelatedtoken" />
	</target>

	<target name="replacedeidentfierrelatedtoken">
		<if>
			<equals arg1="${install.deid.deidentifier}" arg2="yes" />
			<then>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@DEIDENTIFIER_CLASS_NAME@@" value="edu.wustl.catissuecore.deidentifier.deid.DeIDDeidentifier" />
					<replacefilter token="@@DEIDENTIFIER_PROP_1@@" value="deidHome=${deid.home}" />
					<replacefilter token="@@DEIDENTIFIER_PROP_2@@" value="deidDnyFolder=${deid.dny.folder}" />
					<replacefilter token="@@DEIDENTIFIER_PROP_3@@" value="deidConfigFilename=deid.cfg" />
					<replacefilter token="@@DEIDENTIFIER_PROP_4@@" value="deidDTDFilename=Dataset.dtd" />
				</replace>
			</then>
		</if>
		<if>
			<equals arg1="${install.harvardscrubber.deidentfier}" arg2="yes" />
			<then>
				<copy file="${basedir}/caTIES_conf/ScrubberConfiguration.xml" todir="${temp.caties.dir}/caTIES_conf" overwrite="true" />
				<replace file="${temp.caties.dir}/caTIES_conf/ScrubberConfiguration.xml">
					<replacefilter token="@@CONTEXT_FOLDER@@" value="${deidentifier.installation.dir}/caTIES_conf" />
				</replace>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@DEIDENTIFIER_CLASS_NAME@@" value="edu.wustl.catissuecore.deidentifier.harvardscrubber.HarvardSrubberDeidentifier" />
					<replacefilter token="@@DEIDENTIFIER_PROP_1@@" value="harvardScrubberDTDFilename=${deidentifier.installation.dir}/Scrubber.dtd" />
					<replacefilter token="@@DEIDENTIFIER_PROP_2@@" value="harvardScrubberConfigFilename=${deidentifier.installation.dir}/caTIES_conf/ScrubberConfiguration.xml" />
				</replace>
			</then>
		</if>
		<if>
			<equals arg1="${install.donothing.deidentifier}" arg2="yes" />
			<then>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@DEIDENTIFIER_CLASS_NAME@@" value="edu.wustl.catissuecore.deidentifier.DoNothingDeidentifier" />
				</replace>
			</then>
		</if>
		<if>
			<equals arg1="${install.custom.deidentifier}" arg2="yes" />
			<then>
				<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
					<replacefilter token="@@DEIDENTIFIER_CLASS_NAME@@" value="${deidentifier.class.name}" />
				</replace>
			</then>
		</if>
		<replace file="${temp.caties.dir}/caTIES_conf/caTIES.properties">
			<replacefilter token="@@DEIDENTIFIER_CLASS_NAME@@" value="${deidentifier.class.name}" />
			<replacefilter token="@@DEIDENTIFIER_PROP_1@@" value="" />
			<replacefilter token="@@DEIDENTIFIER_PROP_2@@" value="" />
			<replacefilter token="@@DEIDENTIFIER_PROP_3@@" value="" />
			<replacefilter token="@@DEIDENTIFIER_PROP_4@@" value="" />
		</replace>
	</target>

	<target name="deploy_caties_internal">
		<if>
			<equals arg1="yes" arg2="${install.report.loader.server}" />
			<then>
				<antcall target="deploy_report_loader" />
			</then>
		</if>
		<if>
			<equals arg1="yes" arg2="${install.deidentifier.server}" />
			<then>
				<antcall target="${deidentifier.selected}" />
			</then>
		</if>
		<if>
			<equals arg1="yes" arg2="${install.concept.code.server}" />
			<then>
				<antcall target="deploy_concept_code_server" />
			</then>
		</if>
		<if>
			<equals arg1="yes" arg2="${add.default.collection.protocol}" />
			<then>
				<ant dir="${report.loader.installation.dir}" inheritAll="false" antfile="build.xml" target="add_cp" />
			</then>
		</if>
	</target>

	<target name="deploy_report_loader" >
		<copy todir="${report.loader.installation.dir}/lib">
			<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib" />
		</copy>
		<copy file="${temp.caties.dir}/caTIES_conf/caTIES.properties" todir="${report.loader.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${temp.caties.dir}/caTIES_conf/remoteService.xml" todir="${report.loader.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/SectionHeaderConfig.txt" todir="${report.loader.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/sites_configuration.xml" todir="${report.loader.installation.dir}/caTIES_conf" overwrite="true" />
		<copyfile src="${basedir}/caTIES_conf/logger.properties" dest="${report.loader.installation.dir}/log4j.properties" />
		<copy file="${temp.caties.dir}/caTIES_conf/build.xml" todir="${report.loader.installation.dir}" overwrite="true" />
		<copy file="./catissuecore-properties/caTissueCore_Properties.xml" todir="${report.loader.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${temp.caties.dir}/caties.jar" todir="${report.loader.installation.dir}" overwrite="true" />
	</target>

	<target name="deploy_concept_code_server" >
		<copy todir="${concept.code.installation.dir}/lib">
			<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib" />
		</copy>
		<copy file="${temp.caties.dir}/caTIES_conf/caTIES.properties" todir="${concept.code.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${temp.caties.dir}/caTIES_conf/remoteService.xml" todir="${concept.code.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${temp.caties.dir}/caTIES_conf/build.xml" todir="${concept.code.installation.dir}" overwrite="true" />
		<copyfile src="${basedir}/caTIES_conf/logger.properties" dest="${concept.code.installation.dir}/log4j.properties" />
		<copy file="${temp.caties.dir}/caties.jar" todir="${concept.code.installation.dir}" overwrite="true" />
		<unzip src="gate.zip" dest="${concept.code.installation.dir}/gate" />
		<replace file="${concept.code.installation.dir}/gate/gate_3_1/application/plugins/caTIES/creole.xml">
			<replacefilter token="@@HOST@@" value="${jboss.server.host}" />
			<replacefilter token="@@PORT@@" value="${jboss.server.port}" />
			<replacefilter token="@@MMTX_HOME@@" value="${caties.mmtx.home}" />
		</replace>
	</target>

	<target name="deploy_deid_server" >
		<antcall target="copycommonfiles" />
		<copy file="${basedir}/caTIES_conf/deid.cfg" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="JniDeID.dll" todir="${deidentifier.installation.dir}" overwrite="true" />
		<copy file="Dataset.dtd" todir="${deidentifier.installation.dir}" overwrite="true" />

	</target>

	<target name="deploy_harvardscrubber_server" >
		<antcall target="copycommonfiles" />
		<copy file="${temp.caties.dir}/caTIES_conf/ScrubberConfiguration.xml" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/DefaultTextScrubber.xml" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/DefaultXMLTextScrubber.xml" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/names.list" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/regex.list" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/ScrubberConfiguration.xsd" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${basedir}/caTIES_conf/Scrubber.dtd" todir="${deidentifier.installation.dir}" overwrite="true" />

	</target>

	<target name="deploy_donothing_server" >
		<antcall target="copycommonfiles" />
	</target>

	<target name="deploy_custom_server" >
		<antcall target="copycommonfiles" />
	</target>

	<target name="copycommonfiles">
		<copy todir="${deidentifier.installation.dir}/lib">
			<fileset dir="${temp.dir}/catissuecore/WEB-INF/lib" />
		</copy>
		<copy file="${temp.caties.dir}/caTIES_conf/caTIES.properties" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copy file="${temp.caties.dir}/caTIES_conf/remoteService.xml" todir="${deidentifier.installation.dir}/caTIES_conf" overwrite="true" />
		<copyfile src="${basedir}/caTIES_conf/logger.properties" dest="${deidentifier.installation.dir}/log4j.properties" />
		<copy file="${temp.caties.dir}/caTIES_conf/build.xml" todir="${deidentifier.installation.dir}" overwrite="true" />
		<copy file="${temp.caties.dir}/caties.jar" todir="${deidentifier.installation.dir}" overwrite="true" />
	</target>
</project>