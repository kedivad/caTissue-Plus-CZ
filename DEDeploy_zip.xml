<?xml version ="1.0"?>

<!--Ant Script for create Build for DynaminExtentions
	This script is to be kept in the base directory of the host project &
	then imported in the deploy.xml of the host application to able to call the DE specific tasks in the host
	application.
-->
<project name="DynamicExtensionsInstallation">

	<property file="DynamicExtensionsInstall.properties" />
	<property name="base.dir" value="." />
	<property name="de.temp.dir" value="${base.dir}/temp/detemp" />
	<property name="temp.dir.DE" value="${de.temp.dir}/temp" />
	<property name="tempcacore.dir" value="${base.dir}/temp/temp_deaudit_related_files" />
	<property name="export.dir" value="${tempcacore.dir}/temp_exported_xmi" />
	<property name="cacoresdk.dir" value="${tempcacore.dir}/caCoreSDK" />
	<property name="cacore.dir" value="${tempcacore.dir}/temp_caCORESDK" />
	<property name="caCORESDK.zip.location" value="${de.temp.dir}/lib/server/caCORESDK.zip" />
	<property name="dezip.dir" value="${tempcacore.dir}/temp_DE_zip" />
	<property name="dejar.dir" value="${tempcacore.dir}/temp_DE_jar" />
	<property name="entity.jar.location" value="${tempcacore.dir}/entity_jar" />

	<property name="oracle.driver.string.DE" value="oracle.jdbc.driver.OracleDriver" />
	<property name="mysql.driver.string.DE" value="com.mysql.jdbc.Driver" />
	<property name="db2.driver.string.DE" value="com.ibm.db2.jcc.DB2Driver" />
	<property name="db2.sql.dir.DE" value="${de.temp.dir}/db/db-install/db2" />
	<property name="db2.dbupgrade.sql.dir.DE" value="${de.temp.dir}/db/db-upgrade/db2" />
	<property name="mysql.sql.dir.DE" value="${de.temp.dir}/db/db-install/MySql" />
	<property name="mysql.dbupgrade.sql.dir.DE" value="${de.temp.dir}/db/db-upgrade/MySql" />
	<property name="oracle.sql.dir.DE" value="${de.temp.dir}/db/db-install/Oracle" />
	<property name="oracle.dbupgrade.sql.dir.DE" value="${de.temp.dir}/db/db-upgrade/Oracle" />
	<property name="dynamicExtensions.jar.dir.DE" value="${de.temp.dir}/binaries/DynamicExtensionsInterface" />
	<property name="lib.dir.DE" value="${temp.dir.DE}/../lib/server" />
	<property name="extra.lib.dir.DE" value="${temp.dir.DE}/../lib/extra" />

	<property name="oracle.dialect.string.DE" value="org.hibernate.dialect.Oracle9Dialect" />
	<property name="mysql.dialect.string.DE" value="org.hibernate.dialect.MySQLDialect" />
	<property name="db2.dialect.string.DE" value="org.hibernate.dialect.DB2Dialect" />

	<!-- Target For Upgrading the Database From DE v 1.2.0 to DE v 1.3.0 -->


	<target name="deploy_db_DE">
		<echo message="Initializing Database for DynamicExtentions Application..." />
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="deploy_db_mysql_DE" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="deploy_db_oracle_DE" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="deploy_db_db2_DE" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>

	</target>
	<target name="deploy_db_db2_DE">

		<antcall target="execute_file_db_db2">
			<param name="sql.file.name" value="${db2.sql.dir.DE}/dynamicextension.sql" />
		</antcall>
	</target>

	<target name="deploy_db_mysql_DE">

		<antcall target="execute_file_db_mysql">
			<param name="sql.file.name" value="${mysql.sql.dir.DE}/dynamicextension.sql" />
		</antcall>

	</target>

	<target name="deploy_db_oracle_DE">
		<antcall target="execute_file_db_oracle">
			<param name="sql.file.name" value="${oracle.sql.dir.DE}/dynamicextension.sql" />
		</antcall>

	</target>

	<target name="upgrade_db_from_DE_1.2.0_to_DE_1.3.0" description="upgrade db from DE v 1.2.0 to DE v 1.3.0">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="upgrade_db_mysql_from_DE_1.2.0_to_DE_1.3.0" />

			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_oracle_from_DE_1.2.0_to_DE_1.3.0" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_db2_from_DE_1.2.0_to_DE_1.3.0" />

				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>

	<target name="upgrade_db_from_DE_1.3.0_to_DE_1.3.1" description="upgrade db from DE v1.3.0 to v1.3.1">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="upgrade_db_mysql_from_DE_1.3.0_to_DE_1.3.1" />

			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_oracle_from_DE_1.3.0_to_DE_1.3.1" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_db2_from_DE_1.3.0_to_DE_1.3.1" />

				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<antcall target="upgrade_calculated_attributes" />
	</target>

	<target name="upgrade_db_from_DE_1.3.0_to_DE_1.4.0" description="upgrade db from DE v1.3.0 to v1.4.0">
		<!--<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>-->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="upgrade_db_mysql_from_DE_1.3.0_to_DE_1.3.1" />
				<antcall target="upgrade_db_mysql_from_DE_1.3.1_to_DE_1.4.0" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_oracle_from_DE_1.3.0_to_DE_1.3.1" />
					<antcall target="upgrade_db_oracle_from_DE_1.3.1_to_DE_1.4.0" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_db2_from_DE_1.3.0_to_DE_1.3.1" />
					<antcall target="upgrade_db_db2_from_DE_1.3.1_to_DE_1.4.0" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<antcall target="upgrade_calculated_attributes" />
		<antcall target="upgrade_calculated_attributes_metadata" />
	</target>

	<target name="upgrade_db_from_DE_1.3.1_to_DE_1.4.0" description="upgrade db from DE v1.3.1 to v1.4.0">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="upgrade_db_mysql_from_DE_1.3.1_to_DE_1.4.0" />
				<antcall target="update_pvs_for_stinger_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_oracle_from_DE_1.3.1_to_DE_1.4.0" />
					<antcall target="update_pvs_for_stinger_oracle" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_db2_from_DE_1.3.1_to_DE_1.4.0" />
					<antcall target="update_pvs_for_stinger_db2" />

				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
		<antcall target="upgrade_calculated_attributes_metadata" />
	</target>

	<target name="upgrade_db_from_DE_1.4.0_to_DE_1.4.2" description="upgrade db from DE v1.4.0 to v1.4.2">
		<!--<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>-->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="upgrade_db_mysql_from_DE_1.4.0_to_DE_1.4.2" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_oracle_from_DE_1.4.0_to_DE_1.4.2" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="upgrade_db_db2_from_DE_1.4.0_to_DE_1.4.2" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>

	<target name="upgrade_db_db2_from_DE_1.2.0_to_DE_1.3.0" description="upgrade db db2 from DE 1.2.0 to DE 1.3.0">
		<antcall target="execute_file_db_db2">
			<param name="sql.file.name" value="${db2.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.2.0_to_DE_1.3.0.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_mysql_from_DE_1.2.0_to_DE_1.3.0" description="upgrade db from DE 1.2.0 to DE 1.3.0 for mysql">
		<antcall target="execute_file_db_mysql">
			<param name="sql.file.name" value="${mysql.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.2.0_to_DE_1.3.0.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_oracle_from_DE_1.2.0_to_DE_1.3.0" description="upgrade db from DE 1.2.0 to DE  1.3.0 for oracle">
		<antcall target="execute_file_db_oracle">
			<param name="sql.file.name" value="${oracle.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.2.0_to_DE_1.3.0.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_db2_from_DE_1.3.1_to_DE_1.4.0" description="upgrade db db2 from DE 1.3.1 to DE 1.4.0">
		<antcall target="execute_file_db_db2">
			<param name="sql.file.name" value="${db2.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.1_to_DE_1.4.0.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_mysql_from_DE_1.3.1_to_DE_1.4.0" description="upgrade db from DE 1.3.1 to DE 1.4.0 for mysql">
		<antcall target="execute_file_db_mysql">
			<param name="sql.file.name" value="${mysql.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.1_to_DE_1.4.0.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_oracle_from_DE_1.3.1_to_DE_1.4.0" description="upgrade db from DE 1.3.1 to DE 1.4.0 for oracle">
		<antcall target="execute_file_db_oracle">
			<param name="sql.file.name" value="${oracle.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.1_to_DE_1.4.0.sql" />
		</antcall>
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<transaction src="${oracle.dbupgrade.sql.dir.DE}/upgrade_DE_integration_sequences_1.3.1_to_1.4.0.sql" />
			<transaction>commit</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>

	<target name="upgrade_db_db2_from_DE_1.3.0_to_DE_1.3.1" description="upgrade db db2 from DE 1.3.0 to DE 1.3.1">
		<antcall target="execute_file_db_db2">
			<param name="sql.file.name" value="${db2.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.0_to_DE_1.3.1.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_mysql_from_DE_1.3.0_to_DE_1.3.1" description="upgrade db from DE 1.3.0 to DE 1.3.1 for mysql">
		<antcall target="execute_file_db_mysql">
			<param name="sql.file.name" value="${mysql.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.0_to_DE_1.3.1.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_oracle_from_DE_1.3.0_to_DE_1.3.1" description="upgrade db from DE 1.3.0 to DE 1.3.1 for oracle">
		<antcall target="execute_file_db_oracle">
			<param name="sql.file.name" value="${oracle.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.3.0_to_DE_1.3.1.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_db2_from_DE_1.4.0_to_DE_1.4.2" description="upgrade db db2 from DE 1.4.0 to DE 1.4.2">
		<antcall target="execute_file_db_db2">
			<param name="sql.file.name" value="${db2.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0_to_DE_1.4.2.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_mysql_from_DE_1.4.0_to_DE_1.4.2" description="upgrade db from DE 1.4.0 to DE 1.4.2 for mysql">
		<antcall target="execute_file_db_mysql">
			<param name="sql.file.name" value="${mysql.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0_to_DE_1.4.2.sql" />
		</antcall>
	</target>

	<target name="upgrade_db_oracle_from_DE_1.4.0_to_DE_1.4.2" description="upgrade db from DE 1.4.0 to DE 1.4.2 for oracle">
		<antcall target="execute_file_db_oracle">
			<param name="sql.file.name" value="${oracle.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0_to_DE_1.4.2.sql" />
		</antcall>
	</target>


	<target name="execute_file_db_mysql" description="execute the DynamicExtensions sql script for mysql">
		<echo message="upgrading the DB For DynamicExtensions" />
		<sql driver="${mysql.driver.string.DE}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${sql.file.name}" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>

	<target name="execute_file_db_oracle" description="execute the DynamicExtensions sql script for oracle">
		<echo message="upgrading the DB For DynamicExtensions" />
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction src="${sql.file.name}" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>

	<target name="execute_file_db_db2" description="execute the DynamicExtensions sql script for db2">
		<echo message="upgrading the DB For DynamicExtensions" />
		<sql driver="${db2.driver.string.DE}" url="jdbc:db2://${database.host}:${database.port}/${database.name}:currentSchema=${database.schema};" userid="${database.username}" password="${database.password}" onerror="continue">
			<transaction src="${sql.file.name}" />
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
	</target>



	<!--property name="filename" value=" " />
	<property name="mainContainerList" value=" " />
	<property name="package" value=" " />
	<property name="addQueryPaths" value=" " />
	<property name="condition" value=" " />
	<property name="categoryDefinitionFilePath" value=" " />
	<property name="hookentity" value=" " /-->

	<!-- This target will prepare the environment i.e. hibernateconfig files
		other properties file to be able to execute other java classes like import_xmi , create_category etc
-->
	<target name="setupClassExecutionEnvironment" description="This target will prepare the environment i.e. hibernateconfig files other properties file to be able to execute other java classes like import_xmi , create_category etc">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<mkdir dir="${temp.dir.DE}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}" overwrite="true">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<unjar src="./${de.temp.dir}/binaries/DynamicExtensionsInterface/DynamicExtensions.jar" dest="${temp.dir.DE}" overwrite="true" />
		<copy file="./${de.temp.dir}/conf/DynamicExtensionsHibernate.cfg.xml" todir="${temp.dir.DE}" overwrite="true" />
		<copy file="./${de.temp.dir}/conf/ApplicationDAOProperties.xml" todir="${temp.dir.DE}" overwrite="true" />
		<antcall target="create_loggger_properties_file" />
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<replace dir="${temp.dir.DE}">
					<include name="*.cfg.xml" />
					<replacefilter token="@@DIALECT@@" value="${mysql.dialect.string.DE}" />
					<replacefilter token="@@DRIVER@@" value="com.mysql.jdbc.Driver" />
					<replacefilter token="@@URL@@" value="jdbc:mysql://${database.host}:${database.port}/${database.name}" />
				</replace>
				<replace dir="${temp.dir.DE}">
					<include name="ApplicationDAOProperties.xml" />
					<replacefilter token="@@DBPropertyFile@@" value="MySQLDAOProperties.xml" />
				</replace>
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<replace dir="${temp.dir.DE}">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${oracle.dialect.string.DE}" />
						<replacefilter token="@@DRIVER@@" value="${oracle.driver.string.DE}" />
						<replacefilter token="@@URL@@" value="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" />
					</replace>
					<replace dir="${temp.dir.DE}">
						<include name="ApplicationDAOProperties.xml" />
						<replacefilter token="@@DBPropertyFile@@" value="OracleDAOProperties.xml" />
					</replace>
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<replace dir="${temp.dir.DE}">
						<include name="*.cfg.xml" />
						<replacefilter token="@@DIALECT@@" value="${db2.dialect.string.DE}" />
						<replacefilter token="@@DRIVER@@" value="${db2.driver.string.DE}" />
						<replacefilter token="@@URL@@" value="jdbc:db2://${database.host}:${database.port}/${database.name}:currentSchema=${database.schema};" />
					</replace>
					<replace dir="${temp.dir.DE}">
						<include name="ApplicationDAOProperties.xml" />
						<replacefilter token="@@DBPropertyFile@@" value="Db2DAOProperties.xml" />
					</replace>
				</then>
			</elseif>
		</if>
		<replace dir="${temp.dir.DE}">
			<include name="*.cfg.xml" />
			<replacefilter token="@@DATABASE_USERNAME@@" value="${database.username}" />
			<replacefilter token="@@DATABASE_PASSWORD@@" value="${database.password}" />
		</replace>
	</target>

	<!-- Target used to Import the Dynamic Model using Import XMI -->
	<target name="import_xmi_DE" description="Target used to Import the Dynamic Model using Import XMI">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.xmi.importer.XMIImporter" fork="true" maxmemory="1024M">
			<arg value="${filename}" />
			<arg value="${mainContainerList}" />
			<arg value="${package}" />
			<arg value="${hookentity}" />
			<arg value="${addQueryPaths}" />
			<arg value="${condition}" />
			<arg value="${generate.cacore}" />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<!-- Target used to upgrade the dynamic data for bug :  17759-->
	<target name="upgrade_db_maincontainer_data_fixes" description="fixes the data from the inheritance case in main containers bug no:17759">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.MainContainerDataFixer" fork="true" maxmemory="1024M">
					<classpath>
						<pathelement location="${temp.dir.DE}" />
						<fileset dir="${lib.dir.DE}">
							<include name="*.jar" />
							<exclude name="uml-1.3.jar" />
						</fileset>
						<fileset dir="${extra.lib.dir.DE}">
							<include name="jboss-j2ee.jar" />
							<include name="jta.jar" />
						</fileset>
					</classpath>
				</java>
			</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: import.xmi.for.testcases
         - - - - - - - - - - - - - - - - - -->
	<target name="import.xmi.for.testcases" description="Target used to Import the Dynamic Model for test cases">
		<java classname="edu.common.dynamicextensions.xmi.importer.XMIImporter" fork="true" maxmemory="1024M">
			<arg value="${filename}" />
			<arg value="${mainContainerList}" />
			<arg value="${package}" />
			<arg value="${hookentity}" />
			<arg value="${addQueryPaths}" />
			<arg value="${condition}" />
			<arg value="${generate.cacore}" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="../cobertura/coverage.ser" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${base.dir}/../lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${base.dir}/../lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

		<target name="import.xmi.for.testcases.without.caCore" description="Target used to Import the Dynamic Model for test cases">
		<java classname="edu.common.dynamicextensions.util.CiderXMIImporter" fork="true" maxmemory="1024M">
			<arg value="${filename}" />
			<arg value="${mainContainerList}" />
			<arg value="${package}" />
			<arg value="${hookentity}" />
			<arg value="${addQueryPaths}" />
			<arg value="${condition}" />
			<arg value="${generate.cacore}" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="../cobertura/coverage.ser" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${base.dir}/../lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${base.dir}/../lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<property name="categoryXmlFile" value=" " />
	<property name="categoryCsvFileDir" value=" "/>
	<property name="categorySchemaFile" value="./${de.temp.dir}/category_schema.xsd" />
	<!-- =================================
          target: create_category_from_xml
         ================================= -->
	<target name="create_category_from_xml" description="Creates category from XML">
		<antcall target="create_csv_from_xml">
			<param name="categoryCsvFileDir" value="temp_csv"/>
		</antcall>
		<antcall target="create_category">
			<param name="categoryFileDir" value="temp_csv"/>
		</antcall>
		<delete dir="temp_csv" />
	</target>

	<!-- =================================
          target: create_csv_from_xml
         ================================= -->

	<target name="create_csv_from_xml" description="description">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/clientFormCreator.zip" dest="${de.temp.dir}" overwrite="true" />
		<copy file="./${de.temp.dir}/log4j.properties.template" tofile="./log4j.properties" overwrite="true" />
		<mkdir dir="${base.dir}/modules/dynamic_extensions/log" />
		<replace file="./log4j.properties">
			<replacefilter token="@@jbosshome@@" value="." />
		</replace>
		<echo message="Creating Categories" />

		<java classname="edu.common.dynamicextensions.client.XMLToCSV" fork="true" maxmemory="1024M">
			<arg value="${categoryXmlFile}" />
			<arg value="${categoryCsvFileDir}" />
			<arg value="${categorySchemaFile}" />
			<classpath>
				<fileset dir="${de.temp.dir}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
			</classpath>
		</java>
	</target>


	<!-- Target used to create the Category -->
	<property name="categoryFormNamesFile" value=" " />
	<property name="isPersistMetadataOnly" value=" " />
	<property name="categoryFileDir" value=" " />
	<target name="create_category" description="Target used to create the Category">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/clientFormCreator.zip" dest="${de.temp.dir}" overwrite="true" />
		<copy file="./${de.temp.dir}/log4j.properties.template" tofile="./log4j.properties" overwrite="true" />
		<mkdir dir="${base.dir}/modules/dynamic_extensions/log" />
		<replace file="./log4j.properties">
			<replacefilter token="@@jbosshome@@" value="." />
		</replace>
		<echo message="Creating Categories" />
		<java classname="edu.common.dynamicextensions.client.CategoryClient" fork="true" maxmemory="1024M">
			<arg value="${categoryFileDir}" />
			<arg value="${Application.url}" />
			<arg value="${categoryFormNamesFile}" />
			<arg value="${isPersistMetadataOnly}" />

			<classpath>
				<fileset dir="${de.temp.dir}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
			</classpath>
		</java>
		<delete file="${base.dir}/log4j.properties" />
	</target>

	<target name="create_category_metadata_file" description="Target used to create the Category">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/clientFormCreator.zip" dest="${de.temp.dir}" overwrite="true" />
		<copy file="./${de.temp.dir}/log4j.properties.template" tofile="./log4j.properties" overwrite="true" />
		<mkdir dir="${base.dir}/modules/dynamic_extensions/log" />
		<replace file="./log4j.properties">
			<replacefilter token="@@jbosshome@@" value="." />
		</replace>
		<echo message="Creating Categories Metadata File" />
		<java classname="edu.common.dynamicextensions.client.CategoryMetadataClient" fork="true" maxmemory="1024M">
			<arg value="${categoryFormNamesFile}" />
			<arg value="${Application.url}" />
			<classpath>
				<fileset dir="${de.temp.dir}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<!--This target executes create_all_categories command for all the  category-forms file specified within csv file-->

	<!--<target name="create_all_categories">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.MultipleCategoryCreator" fork="true" maxmemory="1024M">
			<arg value="${categoryFormNames}" />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

	</target>-->
	<!--end of  target create_all_categories -->
	<property name="permissibleValuesFile" value=" " />
	<target name="import_permissible_values" description="Import permissible values">

		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/clientFormCreator.zip" dest="${de.temp.dir}" overwrite="true" />
		<copy file="./${de.temp.dir}/log4j.properties.template" tofile="./log4j.properties" overwrite="true" />
		<mkdir dir="${base.dir}/modules/dynamic_extensions/log" />
		<replace file="./log4j.properties">
			<replacefilter token="@@jbosshome@@" value="." />
		</replace>
		<echo message="Importing Permissible Values" />
		<java classname="edu.common.dynamicextensions.client.PermissibleValuesClient" fork="true" maxmemory="1024M">
			<arg value="${permissibleValuesFile}" />
			<arg value="${pv.dir}" />
			<arg value="${Application.url}" />
			<classpath>
				<fileset dir="${de.temp.dir}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
			</classpath>
		</java>

		<delete dir="${base.dir}/tempPVDir" />
		<delete file="${base.dir}/ImportPVDir.zip" />
		<delete file="${base.dir}/log4j.properties" />

	</target>

	<!-- Target to remove PV values-->
	<property name="pvFileName" value="none" />
	<target name="remove_pv_values" description="Remove permissible values">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.parser.RemovePVValues" fork="true" maxmemory="1024M">
			<arg value="${entitygroupName}" />
			<arg value="${entityName}" />
			<arg value="${attributeName}" />
			<arg value="${pvFileName}" />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="upgrade_calculated_attributes" description="Upgrade Category Attributes">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.CalculatedAttributeCreator" fork="true" maxmemory="1024M">
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

	</target>

	<target name="upgrade_calculated_attributes_metadata" description="Upgrade Category Attributes">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.UpgradeCalculatedAttributes" fork="true" maxmemory="1024M">
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

	</target>

	<property name="groupname" value="" />
	<property name="version" value="" />

	<target name="export_xmi" description="Export XMI">
		<if>
			<equals arg1="False" arg2="${setup.method.required}" />
			<then>
				<echo message=" " />
				<echo message="-------------------------------------------------------" />
				<echo message="setupClassExecutionEnvironment method already been called" />
				<echo message="Hence skipping setupClassExecutionEnvironment" />
				<echo message="-------------------------------------------------------" />
				<echo message=" " />
			</then>
			<else>
				<antcall target="setupClassExecutionEnvironment" />
			</else>
		</if>

		<java classname="edu.common.dynamicextensions.xmi.exporter.XMIExporter" fork="true" maxmemory="1024M">
			<arg value="${groupname}" />
			<arg value="${relative.filename}" />
			<arg value="${version}" />
			<arg value="${hookentity}" />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>		
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: export.xmi.for.testcases
         - - - - - - - - - - - - - - - - - -->
	<target name="export.xmi.for.testcases" description="Export XMI for test cases">
		<java classname="edu.common.dynamicextensions.xmi.exporter.XMIExporter" fork="true" maxmemory="1024M">
			<arg value="${groupname}" />
			<arg value="${relative.filename}" />
			<arg value="${version}" />
			<arg value="${hookentity}" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="../cobertura/coverage.ser" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${base.dir}/../lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${base.dir}/../lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<!-- upgrade category entity names from CP_1.1 to CP_1.2 -->
	<target name="upgrade_category_entity_names" description="upgrade category entity names from CP_1.1 to CP_1.2">
		<antcall target="setupClassExecutionEnvironment" />
		<java classname="edu.common.dynamicextensions.util.UpgradeCategoryEntityName" fork="true" maxmemory="1024M">
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${extra.lib.dir.DE}">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>
	</target>
	<!-- upgrade category entity names ends-->


	<target name="create_loggger_properties_file" description="create loggger properties file">
		<copy file="./${de.temp.dir}/conf/log4j.properties.template" tofile="./log4j.properties" overwrite="true" />
		<mkdir dir="${base.dir}/modules/dynamic_extensions/log" />
		<replace file="./log4j.properties">
			<replacefilter token="@@jbosshome@@" value="." />
		</replace>
	</target>

	<target name="reset_record_entry_sequence" description="reset record entry sequence">
		<!--<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>-->
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${oracle.dbupgrade.sql.dir.DE}/reset_record_entry_seq.sql" />
			<transaction>commit</transaction>
		</sql>
	</target>
	<target name="update_pvs_for_stinger" description="updates the pvs for suspecious charaters in stinger ">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="update_pvs_for_stinger_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="update_pvs_for_stinger_oracle" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="update_pvs_for_stinger_db2" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>

	<target name="update_pvs_for_stinger_oracle" description="update pvs for oracle">
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="update_query_cacut_cong_anno.sql" />
		</sql>
	</target>

	<target name="update_pvs_for_stinger_mysql" description="update pvs for mysql">
		<sql driver="${mysql.driver.string.DE}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="#">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${mysql.dbupgrade.sql.dir.DE}/updatePermissibleValues.sql" />
		</sql>
	</target>

	<target name="update_pvs_for_stinger_db2" description="update pvs for DB2">
		<sql driver="${db2.driver.string.DE}" url="jdbc:db2://${database.host}:${database.port}/${database.name}:currentSchema=${database.schema};" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="#">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${db2.dbupgrade.sql.dir.DE}/updatePermissibleValues.sql" />
		</sql>
	</target>
	<target name="reset_DE_sequences" description="reset DE sequences">
		<delete dir="${de.temp.dir}" failonerror="no" />
		<mkdir dir="${de.temp.dir}" />
		<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
		</unzip>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
			</classpath>
		</taskdef>
		<if>
			<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
			<then>
				<antcall target="reset_DE_sequences_mysql" />
			</then>
			<elseif>
				<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="reset_DE_sequences_oracle" />
				</then>
			</elseif>
			<elseif>
				<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="reset_DE_sequences_db2" />
				</then>
			</elseif>
			<else>
				<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
			</else>
		</if>
	</target>

	<target name="reset_DE_sequences_oracle" description="reset DE sequences for oracle">
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction>
								DROP SEQUENCE DE_ATTR_REC_SEQ ;
								DROP SEQUENCE DE_COLL_ATTR_REC_VALUES_SEQ ;
								DROP SEQUENCE DE_FILE_ATTR_REC_VALUES_SEQ ;
								DROP SEQUENCE DE_OBJECT_ATTR_REC_VALUES_SEQ ;
								DROP SEQUENCE DYEXTN_ABSTRACT_METADATA_SEQ ;
								DROP SEQUENCE DYEXTN_ASSO_DISPLAY_ATTR_SEQ ;
								DROP SEQUENCE DYEX_ATTR_TYP_INFO_SEQ ;
								DROP SEQUENCE DYEXTN_CONTAINER_SEQ ;
								DROP SEQUENCE DYEXTN_CONTROL_SEQ ;
								DROP SEQUENCE DYEXTN_DATABASE_PROPERTIES_SEQ ;
								DROP SEQUENCE DYEXTN_DATA_ELEMENT_SEQ ;
								DROP SEQUENCE DYEXTN_ENTITY_MAP_CONDN_SEQ ;
								DROP SEQUENCE DYEXTN_ENTITY_MAP_SEQ ;
								DROP SEQUENCE DYEXTN_ENTITY_RECORD_SEQ ;
								DROP SEQUENCE DYEXTN_FILE_EXTN_SEQ ;
								DROP SEQUENCE DYEXTN_FORM_CONTEXT_SEQ ;
								DROP SEQUENCE DYEXTN_PERMISSIBLEVAL_SEQ ;
								DROP SEQUENCE DYEXTN_ROLE_SEQ ;
								DROP SEQUENCE DYEXTN_RULE_PARAMETER_SEQ ;
								DROP SEQUENCE DYEXTN_RULE_SEQ ;
								DROP SEQUENCE DYEXTN_SEMANTIC_PROPERTY_SEQ ;
								DROP SEQUENCE DYEXTN_TAGGED_VALUE_SEQ ;
								DROP SEQUENCE DYEXTN_VALUE_DOMAIN_SEQ ;
								DROP SEQUENCE DYEXTN_VIEW_SEQ ;
								DROP SEQUENCE DYEXTN_CNSTRKEY_PROP_SEQ;
								</transaction>
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${oracle.driver.string.DE}" url="jdbc:oracle:thin:@${database.host}:${database.port}:${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${oracle.sql.dir.DE}/createDESequence.SQL" />
		</sql>
	</target>

	<target name="reset_DE_sequences_mysql" description="reset DE sequences for mysql">
		<!--<sql driver="${mysql.driver.string.DE}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" rdbms="oracle">
			<transaction>
									DROP SEQUENCE DE_ATTR_REC_SEQ ;
									DROP SEQUENCE DE_COLL_ATTR_REC_VALUES_SEQ ;
									DROP SEQUENCE DE_FILE_ATTR_REC_VALUES_SEQ ;
									DROP SEQUENCE DE_OBJECT_ATTR_REC_VALUES_SEQ ;
									DROP SEQUENCE DYEXTN_ABSTRACT_METADATA_SEQ ;
									DROP SEQUENCE DYEXTN_ASSO_DISPLAY_ATTR_SEQ ;
									DROP SEQUENCE DYEX_ATTR_TYP_INFO_SEQ ;
									DROP SEQUENCE DYEXTN_CONTAINER_SEQ ;
									DROP SEQUENCE DYEXTN_CONTROL_SEQ ;
									DROP SEQUENCE DYEXTN_DATABASE_PROPERTIES_SEQ ;
									DROP SEQUENCE DYEXTN_DATA_ELEMENT_SEQ ;
									DROP SEQUENCE DYEXTN_ENTITY_MAP_CONDN_SEQ ;
									DROP SEQUENCE DYEXTN_ENTITY_MAP_SEQ ;
									DROP SEQUENCE DYEXTN_ENTITY_RECORD_SEQ ;
									DROP SEQUENCE DYEXTN_FILE_EXTN_SEQ ;
									DROP SEQUENCE DYEXTN_FORM_CONTEXT_SEQ ;
									DROP SEQUENCE DYEXTN_PERMISSIBLEVAL_SEQ ;
									DROP SEQUENCE DYEXTN_ROLE_SEQ ;
									DROP SEQUENCE DYEXTN_RULE_PARAMETER_SEQ ;
									DROP SEQUENCE DYEXTN_RULE_SEQ ;
									DROP SEQUENCE DYEXTN_SEMANTIC_PROPERTY_SEQ ;
									DROP SEQUENCE DYEXTN_TAGGED_VALUE_SEQ ;
									DROP SEQUENCE DYEXTN_VALUE_DOMAIN_SEQ ;
									DROP SEQUENCE DYEXTN_VIEW_SEQ ;
									DROP SEQUENCE DYEXTN_CNSTRKEY_PROP_SEQ;
									</transaction>
			<transaction>commit;</transaction>
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</sql>
		<sql driver="${mysql.driver.string.DE}" url="jdbc:mysql://${database.host}:${database.port}/${database.name}" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="/" delimitertype="row" keepformat="yes" rdbms="oracle">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${mysql.sql.dir.DE}/createDESequence.SQL" />
		</sql>-->
	</target>
	<target name="reset_DE_sequences_db2" description="reset DE sequences for db2">
		<sql driver="${db2.driver.string.DE}" url="jdbc:db2://${database.host}:${database.port}/${database.name}:currentSchema=${database.schema};" userid="${database.username}" password="${database.password}" onerror="continue" delimiter="#">
			<classpath>
				<fileset dir="${lib.dir.DE}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<transaction src="${db2.sql.dir.DE}/createDESequence.SQL" />
		</sql>
	</target>

	<!-- =================================
	      Audit related targets start
         ================================= -->
	<target name="merge.audit.xml" description="merges the metadata file generated for the
		imported model with main audit metadata file">
		<java classname="edu.common.dynamicextensions.util.global.XMLUtil" fork="true" maxmemory="1024M">
			<arg value="${cacore.deployable.dir}/${entity.name}/auditablemetadata.xml" />
			<arg value="${de.zip.location}/conf/DynamicExtensionsAuditMetadata.xml" />
			<arg value="${de.zip.location}/conf/auditablemetadataMerged.xml" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${de.zip.location}/lib/server">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${de.zip.location}/binaries/DynamicExtensionsInterface">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
		<move file="${de.zip.location}/conf/auditablemetadataMerged.xml" tofile="${de.zip.location}/conf/DynamicExtensionsAuditMetadata.xml" overwrite="true" />
	</target>

	<target name="generate.xml.for.audit" description="generate the audit metadata xml">
		<property file="${export.dir}/Package.properties" />
		<propertyregex property="package.name" input="${de.package.name}" regexp="/" replace="." defaultValue="${de.package.name}" />

		<copy todir="${base.dir}/classes/" overwrite="true">
			<fileset dir="${entity.jar.location}">
				<include name="**/*" />
			</fileset>
		</copy>


		<java classname="edu.wustl.common.audit.util.AuditXMLGenerator" fork="true" maxmemory="1024M">
			<arg value="${package.name}" />
			<arg value="${cacore.deployable.dir}/${entity.name}/auditablemetadata.xml" />
			<arg value="true" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${de.zip.location}/lib/server">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${de.zip.location}/binaries/DynamicExtensionsInterface">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
		<echo message="Audit metadata xml generate for entity group
		${entity.name} at :${cacore.deployable.dir}/${entity.name}/auditablemetadata.xml" />
		<delete dir="${base.dir}/classes">
		</delete>
	</target>
	<!-- =================================
	     Audit related targets end
         ================================= -->


	<!-- =================================
          target: import.xmi.to.generate.cacore
         ================================= -->
	<target name="import.xmi.to.generate.cacore" depends="" description="Import XMI for caCore generation">
		<mkdir dir="./temp_deaudit_related_files/temp_exported_xmi" />
		<antcall target="import.xmi.for.testcases">
			<param name="filename" value="${xmi.name}" />
			<param name="mainContainerList" value="${mainContainerList}" />
			<param name="package" value="${package.name}" />
			<param name="hookentity" value="${hookentity}" />
			<param name="addQueryPaths" value="${addQueryPaths}" />
		</antcall>

		<delete dir="${tempcacore.dir}" />
		<mkdir dir="${tempcacore.dir}" />

		<delete dir="${export.dir}" />
		<mkdir dir="${export.dir}" />

		<java failonerror="true" classname="edu.wustl.metadata.util.PackageName" fork="yes">
			<arg value="${export.dir}/" />
			<arg value="${xmi.name}" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="../cobertura/coverage.ser" />
			<classpath>
				<pathelement location="${base.dir}/classes/" />
				<fileset dir="${base.dir}/../lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${base.dir}/../lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

		<property file="${export.dir}/Package.properties" />

		<property name="entitygroupname" value="${entity.name}" />
		<property name="xmi.filename" value="${export.dir}/${entity.name}.xmi" />
		<property name="version.number" value="1.1" />

		<antcall target="export.xmi.for.testcases">
			<param name="groupname" value="${entitygroupname}" />
			<param name="relative.filename" value="${xmi.filename}" />
			<param name="version" value="${version.number}" />
			<param name="hookentity" value="${hookentity}" />
		</antcall>

		<antcall target="generate.cacore" />

	</target>

	<!-- =================================
          target: generate.cacore.for.imported.xmis
         ================================= -->
	<target name="generate.cacore.for.imported.xmis" depends="setupClassExecutionEnvironment" description="Generate caCore for imported XMIs">

		<!-- The comma is explicitly given so that if value is empty still it is passed as parameter to java class -->
		<java failonerror="true" classname="edu.wustl.metadata.util.EntityGroupName" fork="yes" maxmemory="1024m">
			<arg value="${tempcacore.dir}/temp_exported_xmi/" />
			<arg value="${exclude.entitygroup}," />
			<arg value="${include.entitygroup}," />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${de.zip.location}/lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${de.zip.location}/lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

		<property file="${tempcacore.dir}/temp_exported_xmi/EntityGroup.properties" />

		<foreach list="${entity.group.name}" param="xmi.name" target="export.xmi.and.generate.cacore" />

		<delete dir="${export.dir}" />
		<!--delete dir="${de.temp.dir}" /-->

	</target>

	<!-- =================================
          target:export.xmi.and.generate.cacore
         ================================= -->
	<target name="export.xmi.and.generate.cacore" description="Export XMI and generate caCore">

		<java failonerror="true" classname="edu.wustl.metadata.util.PackageName" fork="yes" maxmemory="1024m">
			<arg value="${export.dir}/" />
			<arg value="${xmi.name}" />
			<classpath>
				<pathelement location="${temp.dir.DE}" />
				<fileset dir="${de.zip.location}/lib/server">
					<include name="*.jar" />
					<exclude name="uml-1.3.jar" />
				</fileset>
				<fileset dir="${de.zip.location}/lib/extra">
					<include name="jboss-j2ee.jar" />
					<include name="jta.jar" />
				</fileset>
			</classpath>
		</java>

		<property file="${export.dir}/Package.properties" />

		<property name="entitygroupname" value="${entity.name}" />
		<property name="xmi.filename" value="${export.dir}/${entity.name}.xmi" />
		<property name="version.number" value="1.1" />

		<if>
			<equals arg1="${import.xmi}" arg2="True" casesensitive="false" />
			<then>
				<echo message=" " />
				<echo message="-----------------------------------------" />
				<echo message="Generating caCore for ${entitygroupname}" />
				<echo message="-----------------------------------------" />
				<echo message=" " />
				<available file="${xmi.filename}" property="isExportedFilePresent" />
				<if>
					<equals arg1="true" arg2="${isExportedFilePresent}" casesensitive="false" />
					<then>
						<echo message="-------------------------------------------------" />
						<echo message="XMI present hence not exporting XMI for CACORE" />
						<echo message="-------------------------------------------------" />
						<echo message=" " />
					</then>
					<else>
						<antcall target="export_xmi">
							<param name="setup.method.required" value="False" />
							<param name="groupname" value="${entitygroupname}" />
							<param name="relative.filename" value="${xmi.filename}" />
							<param name="version" value="${version.number}" />
							<param name="hookentity" value="${hook.entity.value}" />
						</antcall>
					</else>
				</if>
				<antcall target="generate.cacore" />
			</then>
			<elseif>
				<equals arg1="${import.xmi}" arg2="False" casesensitive="false" />
				<then>
					<available file="${cacore.deployable.dir}/${entitygroupname}/" property="cacore.present" />

					<property name="ORM1CfgFile" value="${cacore.deployable.dir}/${entitygroupname}/orm1.cfg.xml" />
					<property name="DEWebCfgFile" value="${de.zip.location}/conf/DynamicExtensionsHibernateWeb.cfg.xml" />

					<echo message="${ORM1CfgFile}" />
					<echo message="${DEWebCfgFile}" />
					<if>
						<equals arg1="${cacore.present}" arg2="true" />
						<then>
							<echo message=" " />
							<echo message="-----------------------------------------" />
							<echo message="caCore for ${entitygroupname} already generated" />
							<echo message="Skipping caCore generation for ${entitygroupname}" />
							<echo message="-----------------------------------------" />
							<echo message=" " />
						</then>
						<else>
							<antcall target="export_xmi">
								<param name="setup.method.required" value="False" />
								<param name="groupname" value="${entitygroupname}" />
								<param name="relative.filename" value="${xmi.filename}" />
								<param name="version" value="${version.number}" />
								<param name="hookentity" value="${hook.entity.value}" />
							</antcall>
							<antcall target="generate.cacore" />
							<antcall target="merge.audit.xml" />
						</else>
					</if>
					<java classname="edu.wustl.metadata.util.CacoreDEMetadataAppender" fork="true" maxmemory="1024M">
						<arg value="${DEWebCfgFile}" />
						<arg value="${ORM1CfgFile}" />
						<classpath>
							<pathelement location="${temp.dir.DE}" />
							<fileset dir="${de.zip.location}/lib/server">
								<include name="*.jar" />
								<exclude name="uml-1.3.jar" />
							</fileset>
							<fileset dir="${de.zip.location}/lib/extra">
								<include name="jboss-j2ee.jar" />
								<include name="jta.jar" />
							</fileset>
						</classpath>
					</java>
					<antcall target="merge.audit.xml" />

					<copy todir="${entityGroup.jar.location}/" file="${cacore.deployable.dir}/${entitygroupname}/${entitygroupname}.jar" overwrite="true" />
					<echo message="${ORM1CfgFile}" />
					<echo message="${DEWebCfgFile}" />
					<delete>
						<fileset dir="${export.dir}/">
							<include name="**/*.txt" />
							<include name="**/Package.properties" />
						</fileset>
					</delete>
				</then>
			</elseif>
		</if>
	</target>

	<!-- - - - - - - - - - - - - - - - - -
          target: generate.cacore
         - - - - - - - - - - - - - - - - - -->
	<target name="generate.cacore" description="Generate caCore">
		<echo message=" " />
		<echo message="-------------------------" />
		<echo message=" Now creating caCORE war " />
		<echo message="-------------------------" />
		<echo message=" " />

		<antcall target="unzip_caCORESDKzip">
			<param name="entity.group.name" value="${entitygroupname}" />
			<param name="entity.package.name" value="${cacore.package.name}" />
		</antcall>

		<ant antfile="build.xml" dir="${cacoresdk.dir}" target="build-system" />

		<delete dir="${cacore.dir}" />
		<mkdir dir="${cacore.dir}" />
		<unwar dest="${cacore.dir}" src="${cacoresdk.dir}/output/${entitygroupname}/package/${entitygroupname}.war" overwrite="true" />

		<if>
			<equals arg1="True" arg2="${testcases}" />
			<then>
				<delete dir="${entity.jar.location}" />
				<copy todir="${entity.jar.location}/${de.package.name}" overwrite="true">
					<fileset dir="${cacore.dir}/WEB-INF/classes/${de.package.name}">
						<include name="**/*" />
					</fileset>
				</copy>

				<property name="classesDEHibernateCfgFile" value="${base.dir}/classes/DynamicExtensionsHibernate.cfg.xml" />
				<property name="srcDEHibernateCfgFile" value="${base.dir}/../src/conf/DynamicExtensionsHibernate.cfg.xml" />
				<property name="caCOREHibernateCfgFile" value="${cacore.dir}/WEB-INF/classes/orm1.cfg.xml" />


				<java classname="edu.wustl.metadata.util.CacoreDEMetadataAppender" fork="true" maxmemory="1024M">
					<arg value="${classesDEHibernateCfgFile}" />
					<arg value="${caCOREHibernateCfgFile}" />
					<classpath>
						<pathelement location="${base.dir}/classes/" />
						<fileset dir="${base.dir}/../lib/server">
							<include name="*.jar" />
							<exclude name="uml-1.3.jar" />
						</fileset>
						<fileset dir="${base.dir}/../lib/extra">
							<include name="jboss-j2ee.jar" />
							<include name="jta.jar" />
						</fileset>
					</classpath>
				</java>

				<java classname="edu.wustl.metadata.util.CacoreDEMetadataAppender" fork="true" maxmemory="1024M">
					<arg value="${srcDEHibernateCfgFile}" />
					<arg value="${caCOREHibernateCfgFile}" />
					<classpath>
						<pathelement location="${base.dir}/classes/" />
						<fileset dir="${base.dir}/../lib/server">
							<include name="*.jar" />
							<exclude name="uml-1.3.jar" />
						</fileset>
						<fileset dir="${base.dir}/../lib/extra">
							<include name="jboss-j2ee.jar" />
							<include name="jta.jar" />
						</fileset>
					</classpath>
				</java>

				<jar destfile="${entity.jar.location}/${entitygroupname}.jar" basedir="${entity.jar.location}" />
				<copy todir="${base.dir}/../lib/server/" file="${entity.jar.location}/${entitygroupname}.jar" overwrite="true" />

			</then>
			<else>
				<delete dir="${entity.jar.location}" />
				<copy todir="${entity.jar.location}/${de.package.name}" overwrite="true">
					<fileset dir="${cacore.dir}/WEB-INF/classes/${de.package.name}">
						<include name="**/*" />
					</fileset>
				</copy>

				<property name="caCOREHibernateCfgFile" value="${cacore.dir}/WEB-INF/classes/orm1.cfg.xml" />

				<mkdir dir="${cacore.deployable.dir}/${entitygroupname}" />

				<antcall target="build_artifacts" />
				<antcall target="generate.xml.for.audit" />
				<copy todir="${cacore.deployable.dir}/${entitygroupname}/" file="${caCOREHibernateCfgFile}" overwrite="true" />
				<copy todir="${cacore.deployable.dir}/${entitygroupname}/" file="${entity.jar.location}/${entitygroupname}.jar" />
				<delete>
					<fileset dir="${cacore.dir}">
						<include name="**/*" />
					</fileset>
				</delete>
			</else>
		</if>

		<delete>
			<fileset dir="${export.dir}/">
				<include name="**/*.txt" />
				<include name="**/Package.properties" />
			</fileset>
		</delete>
	</target>

	<target name="unzip_caCORESDKzip" description="unzip caCore SDK zip">
		<delete dir="${cacoresdk.dir}" />
		<mkdir dir="${cacoresdk.dir}" />

		<if>
			<equals arg1="True" arg2="${testcases}" />
			<then>
				<unzip src="${base.dir}/../lib/server/caCORESDK.zip" dest="${cacoresdk.dir}" overwrite="true" />
			</then>
			<else>
				<unzip src="${caCORESDK.zip.location}" dest="${cacoresdk.dir}" overwrite="true" />
			</else>
		</if>

		<copy todir="${cacoresdk.dir}/models/xmi" overwrite="true">
			<fileset dir="${export.dir}">
				<include name="*.xmi" />
			</fileset>
		</copy>

		<replace dir="${cacoresdk.dir}/conf">
			<include name="deploy.properties" />
			<replacefilter token="@@ENTITYNAME@@" value="${entity.group.name}.xmi" />
			<replacefilter token="@@FIXED_ENTITYNAME@@" value="fixed_${entity.group.name}.xmi" />
			<replacefilter token="@@PACKAGE_NAME@@" value="${entity.package.name}" />
			<replacefilter token="@@APPLICATION_NAME@@" value="${entity.group.name}" />
		</replace>

	</target>

	<target name="build_artifacts" description="build artifacts">
		<echo message=" " />
		<echo message="-----------------------------------------" />
		<echo message=" Now creating ${entitygroupname}.jar file " />
		<echo message="-----------------------------------------" />
		<echo message=" " />

		<!-- Create ${entitygroupname}.jar file. -->
		<jar destfile="${entity.jar.location}/${entitygroupname}.jar" basedir="${entity.jar.location}" />
	</target>

	<!-- =================================
			target:update_DE - upgrade Dynamic Extension database
			This target is for bug#16635 Single upgrade target required.
					         	================================= -->
	<target name="upgrade.de">
		<antcall target="upgrade_db_from_DE_1.4.0_to_DE_1.4.2" />
	</target>

	<target name="query.metadata" description="Querying metadata to get dynamically generated table names and column names">
			<antcall target="setupClassExecutionEnvironment" />
			<java classname="edu.common.dynamicextensions.util.global.MetadataQueryUtility" fork="true" maxmemory="1024M">
				<arg value="${de.temp.dir}/conf/metadataQuery.xml" />
				<arg value="tableNamesColumnNamesQuery" />
				<arg value="${entityGroupName}" />
				<arg value="${entityName}" />
				<classpath>
					<pathelement location="${temp.dir.DE}" />
					<fileset dir="${lib.dir.DE}">
						<include name="*.jar" />
						<exclude name="uml-1.3.jar" />
					</fileset>
					<fileset dir="${extra.lib.dir.DE}">
						<include name="jboss-j2ee.jar" />
						<include name="jta.jar" />
					</fileset>
				</classpath>
			</java>
		</target>

	<target name="upgrade_db_from_DE_1.4.0.1_to_DE_1.4.0.2" description="upgrade_db_from_DE_1.4.0.1_to_DE_1.4.0.2">
			<!--<delete dir="${de.temp.dir}" failonerror="no" />
			<mkdir dir="${de.temp.dir}" />
			<unzip src="${base.dir}/modules/dynamic_extensions/lib/dynamicextensions.zip" dest="${de.temp.dir}">
			</unzip>-->
			<taskdef resource="net/sf/antcontrib/antcontrib.properties">
				<classpath>
					<pathelement location="${extra.lib.dir.DE}/ant-contrib.jar" />
				</classpath>
			</taskdef>
			<if>
				<equals arg1="mysql" arg2="${database.type}" casesensitive="false" />
				<then>
					<antcall target="execute_file_db_mysql">
						<param name="sql.file.name" value="${mysql.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0.1_to_DE_1.4.0.2.sql" />
					</antcall>
				</then>
				<elseif>
					<equals arg1="oracle" arg2="${database.type}" casesensitive="false" />
					<then>
						<antcall target="execute_file_db_oracle">
							<param name="sql.file.name" value="${oracle.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0.1_to_DE_1.4.0.2.sql" />
						</antcall>
					</then>
				</elseif>
				<elseif>
					<equals arg1="db2" arg2="${database.type}" casesensitive="false" />
					<then>
						<antcall target="execute_file_db_db2">
							<param name="sql.file.name" value="${db2.dbupgrade.sql.dir.DE}/Upgrade_DE_Metadata_DE_1.4.0.1_to_DE_1.4.0.2.sql" />
						</antcall>
					</then>
				</elseif>
				<else>
					<echo message="DATABASE INITIALIZATION FAILED PLEASE CHECK DATABASE.TYPE PROPERTY" level="error" />
				</else>
			</if>
		</target>

		<target name="add.categories.to.cache" description="Marks given categories as cacheable">
			<antcall target="setupClassExecutionEnvironment" />
			<java classname="edu.common.dynamicextensions.util.CategoryUtil" fork="true" maxmemory="1024M">
				<arg value="${categoryFilePath}" />
				<arg value="1" />
				<classpath>
					<pathelement location="${temp.dir.DE}" />
					<fileset dir="${lib.dir.DE}">
						<include name="*.jar" />
						<exclude name="uml-1.3.jar" />
					</fileset>
					<fileset dir="${extra.lib.dir.DE}">
						<include name="jboss-j2ee.jar" />
						<include name="jta.jar" />
					</fileset>
				</classpath>
			</java>

		</target>

		<target name="remove.categories.from.cache" description="Marks given categories as non cacheable">
			<antcall target="setupClassExecutionEnvironment" />
			<java classname="edu.common.dynamicextensions.util.CategoryUtil" fork="true" maxmemory="1024M">
				<arg value="${categoryFilePath}" />
				<arg value="0" />
				<classpath>
					<pathelement location="${temp.dir.DE}" />
					<fileset dir="${lib.dir.DE}">
						<include name="*.jar" />
						<exclude name="uml-1.3.jar" />
					</fileset>
					<fileset dir="${extra.lib.dir.DE}">
						<include name="jboss-j2ee.jar" />
						<include name="jta.jar" />
					</fileset>
				</classpath>
			</java>
		</target>
</project>
