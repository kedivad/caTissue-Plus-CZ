<jmeterTestPlan version="1.2" properties="1.8">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Badboy Test Plan" enabled="true">
      <collectionProp name="TestPlan.thread_groups"/>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <stringProp name="TestPlan.comments"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <longProp name="ThreadGroup.start_time">1195216988000</longProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <longProp name="ThreadGroup.end_time">1195216988000</longProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <collectionProp name="CookieManager.cookies"/>
        </CookieManager>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="VIEWSTATE">VIEWSTATE</stringProp>
            <stringProp name="jsessionid">jsessionid</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1083307151">
              <stringProp name=""></stringProp>
              <stringProp name="9AF7D4145A73BF71B5B350AC16E96ACD">9AF7D4145A73BF71B5B350AC16E96ACD</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="TestElement.per_iteration">true</boolProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Change Password and Login" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Login.do;jsessionid=${jsessionid}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">admin@admin.com</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">loginName</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">loginName</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Login123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Login123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/UpdatePassword.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">denied</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">access</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">access</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">denied</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                  <stringProp name="HTTPArgument.encoded_value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">pageOfChangePassword</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pageOf</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">pageOfChangePassword</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Login123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">oldPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">oldPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Login123</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">newPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">newPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">confirmNewPassword</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">confirmNewPassword</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Home.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Change Password and Login" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Login.do</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">admin@admin.com</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">loginName</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">loginName</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.value">Test123</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="HTTPArgument.encoded_name">password</stringProp>
                  <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  <stringProp name="HTTPArgument.encoded_value">Test123</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Administrative Data Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Department" enabled="false">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module : Add Department" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDepartment</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module : Add Department" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dept</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">dep3</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1363616355">Department successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Institution" enabled="false">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add Institution" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfInstitution</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add Institution" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">inst</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">xx</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1965068297">Institution successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add CRG" enabled="false">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add CRG" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroup.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add CRG" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">crg</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1906811349">Cancer Research Group successfully created </stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Site" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isOnChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">isOnChange</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Site" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.encoded_value"></stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Site</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">admin@admin.com</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">abc</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">street</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">xyz</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">city</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">xyz</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Hawaii</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">state</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Hawaii</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12345</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">United States</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">country</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">123-321-1234</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">123-321-1234</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1270632584">Site successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Box" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Box Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Box Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Box</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-70</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Row</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Column</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1419323152">Storage Type successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Rack" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Rack Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Rack Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Rack</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-50</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Rows</stringProp>
                      <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Columns</stringProp>
                      <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1419323152">Storage Type successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Rack Container" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Rack Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Rack Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Rack Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainerAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Rack</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-50.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsStorageTypeIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="423828019">Storage Container successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Box Container" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Box Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Box Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainer.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfStorageContainer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Box Container" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/StorageContainerAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Box</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">typeName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionInParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">siteForParentContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <stringProp name="Argument.name">isFull</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">typeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">parentContainerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">noOfContainers</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-70.0</stringProp>
                      <stringProp name="Argument.name">defaultTemperature</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">collectionIds</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen</stringProp>
                      <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="423828019">Storage Container successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Specimen Array Type" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayType.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">amp;pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Storage Type" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecArrayType</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenClass</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Bile</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Body Cavity Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Bone Marrow Plasma</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cerebrospinal Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Feces</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Gastric Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Lavage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Milk</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Pericardial Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Plasma</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Saliva</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Serum</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Sputum</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Sweat</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Synovial Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Urine</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Vitreous Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Bone Marrow</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-677639594">Specimen Array Type successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Biohazard" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module:  Add Biohazard" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module:  Add Biohazard " enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Bh01</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">BioHaz1</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Mutagen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">Mutagen</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">comments</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-111862059">Biohazard successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/OpenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfmainCP</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfAssignPrivilegePage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">AssignPrivilegePage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpOperation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-23-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol#</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCollectionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">invokeFunction</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">invokeFunction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DefineEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDefineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-23-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentWaived</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unsignedConsentURLName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentValue(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Event2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveProtocolEvents.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Event1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfDeriveSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">storageLocationForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cryopreserved Cells</stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_storageLocation)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">deriveSpecimenValue(DeriveSpecimenBean:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Auto</stringProp>
                      <stringProp name="Argument.name">storageLocationForAliquotSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">dummyId</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">Event_Id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">studyCalendarEventPoint</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Event1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionPointLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SaveSpecimenRequirements.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenRequirement</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">defineEvents</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">key</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add#</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ShowCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">specimenEventsPage</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Collection Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/SubmitSpecimenCollectionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3d74e18c111f9933b391ce57330948ab</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">specimen[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S0</stringProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">specimen[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1</stringProp>
                      <stringProp name="Argument.name">specimen[1].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Specimen_E1_S1</stringProp>
                      <stringProp name="Argument.name">specimen[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">specimen[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">specimen[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">specimen[1].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30</stringProp>
                      <stringProp name="Argument.name">specimen[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">specimen[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1_S1</stringProp>
                      <stringProp name="Argument.name">specimen[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">specimen[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E1</stringProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collection Protocol</stringProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1231830005">Collection Protocol successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Distribution Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Distribution Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Add Distribution Protocol" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestDistProt</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">title</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testDP</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">shortTitle</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ssss</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">irbID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-23-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">startDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisstartDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">enrollment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">descriptionURL</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">counter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_specimenClass)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_specimenType)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Ampulla of Vater</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_tissueSite)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Malignant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_pathologyStatus)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="471465307">Distribution Protocol successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Biospecimen Data Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Participant" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/Participant.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipant</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Participant" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ParticipantLookup.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipant</stringProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>

                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Test</stringProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Participnat</stringProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">m</stringProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-01-2002</stringProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2002</stringProp>
                      <stringProp name="Argument.name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Živý</stringProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Muž</stringProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Penta X Syndrome</stringProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Černá nebo Africká</stringProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Neznámo</stringProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">123</stringProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-- Vybrat --</stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-24-2008</stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">None Defined</stringProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1133686692">Participant successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Participant Registration" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipant.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clearConsentSession</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ConsentDisplay.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfConsent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">index</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/ConsentSubmit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">signedConsentUrl</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">witnessId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-24-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisconsentDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Participant Registration" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantLookup.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">radioValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">valueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>

                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">firstName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">B1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">middleName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">01-02-1983</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">birthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1983</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calyearbirthDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Neznámo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">vitalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Muž</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">gender</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Neznámo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">genotype</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Asijská</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">raceTypes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Není Hispánský ani Latinský</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ethnicity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">A1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-24-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Consent</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Enter Response</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1133686692">Participant successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="UpdateSCG &amp; Collect Specimens" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">evtDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(FFF1)</stringProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4</stringProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">offset</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Complete</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">aaafe91472f968aa3c7f5d80a41b3221</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E2_</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastSelectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory specimens</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">targetSuccess</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateSpecimenStatus</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submitAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">showCheckBoxes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">showLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">showbarCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">showParentStorage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">b179151b79768b034c570780bbe1628d</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <stringProp name="Argument.name">specimen[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">specimen[1].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">specimen[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E2_</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastSelectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory specimens</stringProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[0].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.name">aliquot[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_11</stringProp>
                      <stringProp name="Argument.name">aliquot[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <stringProp name="Argument.name">aliquot[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">aliquot[1].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_12</stringProp>
                      <stringProp name="Argument.name">aliquot[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12</stringProp>
                      <stringProp name="Argument.name">aliquot[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[2].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[2].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[2].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[2].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[2].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[2].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[2].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_13</stringProp>
                      <stringProp name="Argument.name">aliquot[2].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <stringProp name="Argument.name">aliquot[2].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[3].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_4</stringProp>
                      <stringProp name="Argument.name">aliquot[3].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_4</stringProp>
                      <stringProp name="Argument.name">aliquot[3].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[3].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[3].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[3].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <stringProp name="Argument.name">aliquot[3].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[3].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[3].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[3].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_14</stringProp>
                      <stringProp name="Argument.name">aliquot[3].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <stringProp name="Argument.name">aliquot[3].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">derived[0].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">derived[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">derived[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cryopreserved Cells</stringProp>
                      <stringProp name="Argument.name">derived[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2.0</stringProp>
                      <stringProp name="Argument.name">derived[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">derived[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">derived[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">derived[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <stringProp name="Argument.name">derived[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">derived[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">derived[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Derived9_10</stringProp>
                      <stringProp name="Argument.name">derived[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.name">derived[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory</stringProp>
                      <stringProp name="Argument.name">targetSuccess</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateSpecimenStatus</stringProp>
                      <stringProp name="Argument.name">submitAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showCheckBoxes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showbarCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showParentStorage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">bc807e0929c47a6054529e2c05773646</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <stringProp name="Argument.name">specimen[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">specimen[1].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">specimen[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E2_</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lastSelectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory specimens</stringProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory</stringProp>
                      <stringProp name="Argument.name">targetSuccess</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateSpecimenStatus</stringProp>
                      <stringProp name="Argument.name">submitAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showCheckBoxes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showbarCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showParentStorage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: UpdateSCG &amp; Collect Specimens" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/GenericSpecimenSummary.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SCGSpecimens</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">save</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">printflag</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">502b9f6c90132da5c3e4fe27b2fd6c2c</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">org.apache.struts.taglib.html.TOKEN</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimen[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">specimen[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">specimen[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimen[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">specimen[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">30.0</stringProp>
                      <stringProp name="Argument.name">specimen[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">specimen[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">specimen[1].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">specimen[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">9</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimen[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">E2_</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <stringProp name="Argument.name">lastSelectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">S_9</stringProp>
                      <stringProp name="Argument.name">selectedSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ADD</stringProp>
                      <stringProp name="Argument.name">userAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory specimens</stringProp>
                      <stringProp name="Argument.name">requestType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[0].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">5</stringProp>
                      <stringProp name="Argument.name">aliquot[0].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[0].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_11</stringProp>
                      <stringProp name="Argument.name">aliquot[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">11</stringProp>
                      <stringProp name="Argument.name">aliquot[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_2</stringProp>
                      <stringProp name="Argument.name">aliquot[1].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[1].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[1].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[1].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">aliquot[1].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[1].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[1].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[1].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[1].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[1].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[1].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_12</stringProp>
                      <stringProp name="Argument.name">aliquot[1].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">12</stringProp>
                      <stringProp name="Argument.name">aliquot[1].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[2].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[2].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[2].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[2].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">aliquot[2].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[2].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[2].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[2].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[2].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[2].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[2].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_13</stringProp>
                      <stringProp name="Argument.name">aliquot[2].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">13</stringProp>
                      <stringProp name="Argument.name">aliquot[2].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">aliquot[3].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_4</stringProp>
                      <stringProp name="Argument.name">aliquot[3].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2_4</stringProp>
                      <stringProp name="Argument.name">aliquot[3].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[3].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">aliquot[3].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[3].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">6</stringProp>
                      <stringProp name="Argument.name">aliquot[3].positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">aliquot[3].containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">aliquot[3].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">aliquot[3].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">aliquot[3].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">aliquot[3].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">aliquot[3].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Aliquot9_14</stringProp>
                      <stringProp name="Argument.name">aliquot[3].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">14</stringProp>
                      <stringProp name="Argument.name">aliquot[3].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">derived[0].parentName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">derived[0].displayName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">derived[0].barCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cryopreserved Cells</stringProp>
                      <stringProp name="Argument.name">derived[0].type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2.0</stringProp>
                      <stringProp name="Argument.name">derived[0].quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">derived[0].concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Virtual</stringProp>
                      <stringProp name="Argument.name">derived[0].storageContainerForSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">derived[0].checkedSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <stringProp name="Argument.name">derived[0].className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">derived[0].pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">derived[0].collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">derived[0].readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Derived9_10</stringProp>
                      <stringProp name="Argument.name">derived[0].uniqueIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.name">derived[0].id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">anticipatory</stringProp>
                      <stringProp name="Argument.name">targetSuccess</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">updateSpecimenStatus</stringProp>
                      <stringProp name="Argument.name">submitAction</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showCheckBoxes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showbarCode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">readOnly</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.name">showParentStorage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Fluid Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">evtDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(FFF1)</stringProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4</stringProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">offset</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Complete</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-11260403">Specimen Collection Group successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Fluid Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ml</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1767389327">Fluid Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Tissue Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">evtDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(FFF1)</stringProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4</stringProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">offset</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Complete</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-11260403">Specimen Collection Group successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Tissue Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Tissue</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fresh Tissue</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">gm</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-228382324">Tissue Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Molecular Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">evtDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(FFF1)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">offset</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Complete</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-11260403">Specimen Collection Group successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Molecular</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DNA</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">�g</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Molecular Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Molecular</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">DNA</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">�g</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1445888681">Molecular Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Cell Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenCollectionGroupSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">SpecimenCollectionGroup_2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clickedNodeId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">evtDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQuerySpecimenCollectionGroupEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfSpecimenCollectionGroupCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">undefined</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyToSpecimenValue</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">createNewSpecimen</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1(FFF1)</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantNameWithProtocolId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">testcp</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">redirectTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">N1, G1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">FFF1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">protocolParticipantIdentifier</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaysiteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">siteId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">name</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionProtocolEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">offset</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalDiagnosis</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">clinicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">participantsMedicalIdentifierId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">surgicalPathologyNumber</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comment</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Complete</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:0_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:1_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForScgValues(ConsentBean:2_specimenCollectionGroupLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">submitAndAdd</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-11260403">Specimen Collection Group successfully updated</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">value</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onCollOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Default</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cryopreserved Cells</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cell count</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Add Cell Specimen" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenAdd.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cell</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Cryopreserved Cells</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">25</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">cell count</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">crDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">43</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">44</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Admin, Admin</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventUserId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoiscollectionEventdateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">calmoisreceivedEventDateOfEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displaycollectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">18</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInHours</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">displayreceivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">31</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventTimeInMinutes</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventCollectionProcedure</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventReceivedQuality</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">collectionEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">receivedEventComments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">null</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="262680905">Cell Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Create Aliquots" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/QuerySpecimenSearch.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfNewSpecimenCPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">refresh</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchParticipantId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">cpSearchCpId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryNewSpecimenEdit.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">edit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCreateAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtuallyLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No Action</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Active</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">activityStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">stringOfResponseKeys</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ApplyNone</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">applyChangesTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentTierCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">onSubmit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Rack : 1 Pos(2,2)</stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.name">parentPresent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">TestCP_2_1</stringProp>
                      <stringProp name="Argument.name">specimenCollectionGroupName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.name">label</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <stringProp name="Argument.name">barcode</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20.0</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">available</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20.0</stringProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Testsite4_Rack_1</stringProp>
                      <stringProp name="Argument.name">selectedContainerName</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Collected</stringProp>
                      <stringProp name="Argument.name">collectionStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16</stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">hide</stringProp>
                      <stringProp name="Argument.name">bhDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">bhCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_persisted)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_type)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">biohazardValue(Biohazard:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for TB</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">53</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:0_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for AIDS</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">52</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Yes</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:1_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_consentTierID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">consent for Cancer</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_statement)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_participantResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">54</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponseID)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">No</stringProp>
                      <stringProp name="Argument.name">consentResponseForSpecimenValues(ConsentBean:2_specimenLevelResponse)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">numberOfSpecimens</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">on</stringProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">New</stringProp>
                      <stringProp name="Argument.name">lineage</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">restrictSCGCheckbox</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Aliquots" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CPQueryCreateAliquots.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">pageOfCreateAliquot</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">create</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">buttonClicked</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">parentSpecimenId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CPQuery</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CPQuery</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">8</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">noOfAliquots</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">quantityPerAliquot</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <stringProp name="Argument.name">id</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Fluid</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Whole Blood</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSite</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">tissueSide</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Not Specified</stringProp>
                      <stringProp name="Argument.name">pathologicalStatus</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">20.0</stringProp>
                      <stringProp name="Argument.name">initialAvailableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">16.0</stringProp>
                      <stringProp name="Argument.name">availableQuantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(radio_1)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(Specimen:1_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(radio_2)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(Specimen:2_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(radio_3)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">value(Specimen:3_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1.0</stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_quantity)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_StorageContainer_id_fromMap)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">value(radio_4)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_StorageContainer_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_positionDimensionOne)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">value(Specimen:4_positionDimensionTwo)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">23</stringProp>
                      <stringProp name="Argument.name">specimenID</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">spCollectionGroupId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">CPQueryPrintAliquot</stringProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Create Derivatives" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Derivative" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">amp;pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Derivative" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/CreateSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">pageOf</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">15</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">menuSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">virtualLocated</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isLabelBarcodeOrClassChange</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">success</stringProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Molecular</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">RNA</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">�g</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree/>
              <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Create Derivative" enabled="true">
                <stringProp name="HTTPSampler.path">/catissuecore/AddSpecimen.do</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                <stringProp name="HTTPSampler.port">18080</stringProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">isQuickEvent</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">specimenAttributeKey</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">derivedSpecimenCollectionGroup</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">rowSelected</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">add</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">operation</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">ForwardTo</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">submittedFor</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">newSpecimenEdit</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">forwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">multipleSpecimen</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">containerId</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">nextForwardTo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">positionInStorageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">checkedButton</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">7</stringProp>
                      <stringProp name="Argument.name">parentSpecimenLabel</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">Molecular</stringProp>
                      <stringProp name="Argument.name">className</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">RNA</stringProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">07-25-2008</stringProp>
                      <stringProp name="Argument.name">createdDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.name">calmoiscreatedDate</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">concentration</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">quantity</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">�g</stringProp>
                      <stringProp name="Argument.name">unit</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.name">stContSelection</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">storageContainer</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">4</stringProp>
                      <stringProp name="Argument.name">positionDimensionOne</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">positionDimensionTwo</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">comments</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">eiDispType</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.name">exIdCounter</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_id)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_name)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="HTTPArgument">
                      <stringProp name="Argument.use_equals">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.name">externalIdentifierValue(ExternalIdentifier:1_value)</stringProp>
                      <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.mimetype"></stringProp>
                <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                <stringProp name="HTTPSampler.monitor">false</stringProp>
                <stringProp name="HTTPSampler.domain">localhost</stringProp>
                <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              </HTTPSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1445888681">Molecular Specimen successfully created</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <stringProp name="Assertion.assume_success">false</stringProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Cell Specimen" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Collection Protocol" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Negative Tests" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Department Object" enabled="false">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module : Add Department" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDepartment</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">3</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module : Add Department" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">dept</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">dep3</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1880121294">Submission failed since a Department with the same NAME already exists </stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Institution Object" enabled="false">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add Institution" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfInstitution</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Add Institution" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">inst</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">xx</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1087043956">Submission failed since a Institution with the same NAME already exists </stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Site Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Site Object" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Site Object" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">isOnChange</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">isOnChange</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Testsite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Collection Site</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Site Object" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Testsite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Collection Site</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">admin@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">abc</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">xyz</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">xyz</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Hawaii</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Hawaii</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123-321-1234</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123-321-1234</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-391259293">Submission failed since a Site with the same NAME already exists</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Storage Type Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Box Type" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/StorageType.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfStorageType</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Box Type" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/StorageTypeAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">null</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">success</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">forwardTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">redirectTo</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Box</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-70</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">defaultTemperature</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Specimen</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenOrArrayType</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">-1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">holdsSpecimenClassTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Row</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">oneDimensionLabel</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Column</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">twoDimensionLabel</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1578895819">Submission failed since a Container Type with the same NAME already exists</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Specimen Array Type Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Specimen Array Type" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayType.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">amp;pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Specimen Array Type" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">SpecArrayType</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenClass</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Bile</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Body Cavity Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Bone Marrow Plasma</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Cerebrospinal Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Feces</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Gastric Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Lavage</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Milk</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Not Specified</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Pericardial Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Plasma</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Saliva</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Serum</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Sputum</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Sweat</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Synovial Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Urine</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Vitreous Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Whole Blood</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Whole Bone Marrow</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">specimenTypes</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">9</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1578895819">Submission failed since a Container Type with the same NAME already exists</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Biohazard Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Biohazard Object" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Biohazard.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfBioHazard</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfBioHazard</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">8</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">8</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Biohazard Object" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/BiohazardAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Bh01</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">BioHaz1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Mutagen</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Mutagen</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">comments</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">comments</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">comments</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">comments</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1131048946">Submission failed since a Biohazard with the same NAME already exists</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Collection Protocol Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Duplicate Distribution Protocol Object" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocol.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDistributionProtocol</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Duplicate Distribution Protocol" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DistributionProtocolAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">principalInvestigatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">TestDistProt</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">title</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">testDP</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">shortTitle</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">ssss</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">irbID</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">07-23-2008</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">startDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">calmoisstartDate</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">enrollment</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">descriptionURL</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">counter</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Fluid</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_specimenClass)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Whole Blood</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_specimenType)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Ampulla of Vater</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_tissueSite)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Malignant</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_pathologyStatus)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.use_equals">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <stringProp name="Argument.name">value(DistributionSpecimenRequirement:1_quantity)</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-517167999">Submission failed since a Specimen Protocol with the same TITLE already exists</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Empty Field Tests" enabled="true">
              <stringProp name="LoopController.loops">1</stringProp>
              <boolProp name="LoopController.continue_forever">true</boolProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Institution with Empty Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with Empty Name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Institution.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfInstitution</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">2</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Institution with Empty Name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/InstitutionAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1104420832">Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Department with Empty Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with Empty Name:" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Department.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfDepartment</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">3</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Department with Empty Name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/DepartmentAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1104420832">Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add CRG with Empty Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with Empty Name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroup.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">4</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add CRG with Empty Name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1104420832">Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Add Site with Empty Name" enabled="true">
                <stringProp name="LoopController.loops">1</stringProp>
                <boolProp name="LoopController.continue_forever">true</boolProp>
              </LoopController>
              <hashTree>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with empty name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with empty name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/Site.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">isOnChange</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">isOnChange</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">true</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Collection Site</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree/>
                <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Add Site with empty name" enabled="true">
                  <stringProp name="HTTPSampler.path">/catissuecore/SiteAdd.do</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <stringProp name="HTTPSampler.port">18080</stringProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">add</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">operation</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">add</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">id</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">0</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">onSubmit</stringProp>
                        <stringProp name="HTTPArgument.encoded_value"></stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">pageOfSite</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">pageOfSite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Testsite</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Collection Site</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">type</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">type</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Collection+Site</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">coordinatorId</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">admin@admin.com</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">emailAddress</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">admin@admin.com</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">abc</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">street</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">street</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">abc</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">xyz</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">city</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">city</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">xyz</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">Hawaii</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">state</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">state</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">Hawaii</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">12345</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">zipCode</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">12345</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">United States</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">country</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">country</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">United+States</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123-321-1234</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">phoneNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="HTTPArgument">
                        <stringProp name="Argument.metadata">=</stringProp>
                        <stringProp name="Argument.value">123-321-1234</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.always_encode">true</stringProp>
                        <stringProp name="HTTPArgument.encoded_name">faxNumber</stringProp>
                        <stringProp name="HTTPArgument.encoded_value">123-321-1234</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.mimetype"></stringProp>
                  <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
                  <stringProp name="HTTPSampler.monitor">false</stringProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                </HTTPSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1104420832">Name is required</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <stringProp name="Assertion.assume_success">false</stringProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Department" enabled="false">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module:Edit Department" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDepartment</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Department</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module:Edit Department" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Department</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfDepartment</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfDepartment</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Department</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Department</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Department.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Department.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module:Edit Department" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/DepartmentEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">updatedDept</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">newUpdatedDept</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="582118192">Department successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Institution" enabled="false">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit Institution" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfInstitution</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Institution</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit Institution" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Institution</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">2</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfInstitution</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfInstitution</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Institution</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Institution</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Institution.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">Institution.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit Institution" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/InstitutionEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">updatedInst</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">updatedInst11</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1061048118">Institution successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit CRG" enabled="false">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit CRG" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit CRG" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">4</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">4</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCancerResearchGroup</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">pageOfCancerResearchGroup</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">false</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CancerResearchGroup</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_table%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">CancerResearchGroup.IDENTIFIER.bigint</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_DataElement_field%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">CancerResearchGroup.IDENTIFIER.bigint</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_Operator_operator%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">%3D</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">value%28SimpleConditionsNode%3A1_Condition_value%29</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Module: Edit CRG" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/CancerResearchGroupEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">edit</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value"></stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">1</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">updatedCRG</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                    <stringProp name="HTTPArgument.encoded_name">name</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                    <stringProp name="HTTPArgument.encoded_value">newUpdateCRG</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="338073192">Cancer Research Group successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Site" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Site" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSite</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Site</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Site" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Site</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSite</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Site</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Site.NAME.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Testsite</stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Site" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SiteEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSite</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Testsite_updated</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Laboratory</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">coordinatorId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">admin@admin.com</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">emailAddress</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">abc</stringProp>
                    <stringProp name="Argument.name">street</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">xyz</stringProp>
                    <stringProp name="Argument.name">city</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Alaska</stringProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">12345</stringProp>
                    <stringProp name="Argument.name">zipCode</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">United States</stringProp>
                    <stringProp name="Argument.name">country</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">123-321-1234</stringProp>
                    <stringProp name="Argument.name">phoneNumber</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">123-321-1234</stringProp>
                    <stringProp name="Argument.name">faxNumber</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1022050449">Site successfully updated for Testsite_updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Edit Specimen Array Type" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Specimen Array Type" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleQueryInterface.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Specimen Array Type" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SimpleSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">aliasName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">menuSelected</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">objectChanged</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">counter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfSpecimenArrayType</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">andOrOperation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecimenArrayType</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_table)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ContainerType.NAME.varchar</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_DataElement_field)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Starts With</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_Operator_operator)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">showCalendar(SimpleConditionsNode:1_showCalendar)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecArrayType</stringProp>
                    <stringProp name="Argument.name">value(SimpleConditionsNode:1_Condition_value)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Administrative Data Tests: Edit Specimen Array Type" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/SpecimenArrayTypeEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">SpecArrayType_Updtd</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">name</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Fluid</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenClass</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sputum</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Feces</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Sweat</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Synovial Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Bile</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Cerebrospinal Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Amniotic Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Serum</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Whole Bone Marrow</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Saliva</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Plasma</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Body Cavity Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Milk</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Pericardial Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Lavage</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Whole Blood</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Vitreous Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Gastric Fluid</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Not Specified</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Bone Marrow Plasma</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Urine</stringProp>
                    <stringProp name="Argument.name">specimenTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">comment</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">oneDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.name">twoDimensionCapacity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1940624343">Specimen Array Type successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/CpBasedSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/showCpAndParticipants.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfCpQueryResults</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/blankScreenAction.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/QueryParticipantSearch.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipantCPQueryEdit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpSearchCpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ConsentDisplay.do</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfConsent</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">index</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpSearchCpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolRegIdValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/ConsentSubmit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">collectionProtocolID</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No Action</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">withdrawlButtonStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">signedConsentUrl</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">witnessId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">07-24-2008</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">calmoisconsentDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_consentTierID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">consent for Cancer</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_statement)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_participantResponseID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">No</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:0_participantResponse)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_consentTierID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">consent for AIDS</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_statement)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_participantResponseID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:1_participantResponse)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_consentTierID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">consent for TB</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_statement)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_participantResponseID)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Yes</stringProp>
                    <stringProp name="Argument.name">consentResponseValue(ConsentBean:2_participantResponse)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree/>
            <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Biospecimen Data Tests: Edit Participant Registration" enabled="true">
              <stringProp name="HTTPSampler.path">/catissuecore/CPQueryParticipantEdit.do</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <stringProp name="HTTPSampler.port">18080</stringProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">participantId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">cpId</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">radioValue</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">edit</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">operation</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">ForwardTo</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">submittedFor</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">forwardTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">valueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValueCounter</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">onSubmit</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.name">id</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.name">redirectTo</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">pageOfParticipantCPQuery</stringProp>
                    <stringProp name="Argument.name">pageOf</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">212</stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartA</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">32</stringProp>
                    <stringProp name="Argument.name">socialSecurityNumberPartB</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>

                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">N1</stringProp>
                    <stringProp name="Argument.name">lastName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">R1</stringProp>
                    <stringProp name="Argument.name">firstName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">G1</stringProp>
                    <stringProp name="Argument.name">middleName</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">01-02-1987</stringProp>
                    <stringProp name="Argument.name">birthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">calmoisbirthDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Neznámo</stringProp>
                    <stringProp name="Argument.name">vitalStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.name">calmoisdeathDate</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Muž</stringProp>
                    <stringProp name="Argument.name">gender</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Neznámo</stringProp>
                    <stringProp name="Argument.name">genotype</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Asijská</stringProp>
                    <stringProp name="Argument.name">raceTypes</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Není Hispánský ani Latinský</stringProp>
                    <stringProp name="Argument.name">ethnicity</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <stringProp name="Argument.name">activityStatus</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_Site_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">A11</stringProp>
                    <stringProp name="Argument.name">value(ParticipantMedicalIdentifier:1_medicalRecordNumber)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">testcp</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_shortTitle)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_CollectionProtocol_id)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">FFF11</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_protocolParticipantIdentifier)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">07-24-2008</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_registrationDate)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Active</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_activityStatus)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Consent</stringProp>
                    <stringProp name="Argument.name">CollectionProtocolConsentChk_1</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <stringProp name="Argument.use_equals">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <stringProp name="Argument.value">Edit Response</stringProp>
                    <stringProp name="Argument.name">collectionProtocolRegistrationValue(CollectionProtocolRegistration:1_isConsentAvailable)</stringProp>
                    <stringProp name="HTTPArgument.always_encode">true</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.mimetype"></stringProp>
              <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
              <stringProp name="HTTPSampler.monitor">false</stringProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            </HTTPSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1898295855">Participant successfully updated</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.assume_success">false</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <stringProp name="LoopController.loops">1</stringProp>
            <boolProp name="LoopController.continue_forever">true</boolProp>
          </LoopController>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Logout" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">true</boolProp>
        </LoopController>
        <hashTree>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Home.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/Logout.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
          <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Logout" enabled="true">
            <stringProp name="HTTPSampler.path">/catissuecore/RedirectHome.do</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <stringProp name="HTTPSampler.port">18080</stringProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Argument List" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.mimetype"></stringProp>
            <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
            <stringProp name="HTTPSampler.monitor">false</stringProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          </HTTPSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
            <name>saveConfig</name>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.error_logging">false</boolProp>
        </ResultCollector>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">600</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
