<?xml version ="1.0" encoding="UTF-8"?>

<!--Ant Script for create Build for caTISSUE Core-->
<project name="caTissue Suite" default="compile">
	<import file="build-properties.xml"/>
	<!--define require dir and Properties for <if> </if> tag-->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="./lib/ant-contrib.jar"/>
		</classpath>
	</taskdef>

	<!--<loadfile property="dist.revision" srcFile="./.svn/entries">
		<filterchain>
			<headfilter lines="1" skip="4"/>
		</filterchain>
	</loadfile>-->

	<!--define require dir and Properties -->
	<property file="JMeterTest.properties" />
	<property name="base.dir" value="." />
	<property name="src.dir" value="${base.dir}/WEB-INF/src" />
	<property name="target.dir" value="${base.dir}/WEB-INF/classes" />
	<property name="lib.dir" value="${base.dir}/WEB-INF/lib" />
	<property name="applet.dir" value="${base.dir}/Applet" />
	<property name="dagviewapplet.dir" value="${applet.dir}/DagViewApplet" />
	<property name="hbm.dir" value="${src.dir}/edu/wustl/catissuecore/hbm" />
	<property name="extra_lib.dir" value="${base.dir}/extra_lib" />
	<property name="generateforce" value="true" />
	<property name="junit.jar" value="${lib.dir}/junit-4.1.jar" />
	<property name="cobertura.dir" value="${target.dir}/reports/coverage" />
	<property name="report.dir" value="${base.dir}/WEB-INF" />
	<property name="catissue.applet.dir" value="${base.dir}/Applet/catissue" />
	<property name="test.src.dir" value="${base.dir}/WEB-INF/src/edu/wustl/catissuecore/bizlogic/test" />
	<property name="test.class.dir" value="${base.dir}/WEB-INF/classes/edu/wustl/catissuecore/bizlogic/test" />
	<!-- csm related properties -->
	<property name="temp.dir" value="${base.dir}/tempCatissuecore"/>
	<property name="oracle.dialect.h3.string" value="org.hibernate.dialect.Oracle9Dialect"/>
	<property name="mysql.dialect.h3.string" value="edu.wustl.catissuecore.hibernate.dialect.MySqlCustomDialect"/>
	<property name="client.dir" value="${base.dir}/caTissueSuite_Client" />
	<property name="project.src.domain" value="${base.dir}/WEB-INF/src/edu/wustl/catissuecore/domain/"/>
	<property name="custom.impl.lib.dir" value="${base.dir}/custom_impl_lib" />

	<!-- flex related properties -->
	<property name="FLEX_HOME" value="C:/Program Files (x86)/Adobe/Flex Builder 3/sdks/2.0.1"/>
	<property name="FLEX_APP_ROOT" value="flexclient"/>
	<property name="flex.dir" value="${base.dir}/WEB-INF/flex" />
	<!-- flex related properties finish -->
	<path id="app.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="xdoclet.classpath">
		<path refid="app.classpath" />
		<pathelement location="${extra_lib.dir}/commons-net-1.2.2.jar" />
		<pathelement location="${extra_lib.dir}/hibernate-tools.jar" />
		<pathelement location="${extra_lib.dir}/servlet-api.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-hibernate-module-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xdoclet-xdoclet-module-1.2.jar" />
		<pathelement location="${extra_lib.dir}/xerces.jar" />
		<pathelement location="${extra_lib.dir}/xjavadoc-1.0.2.jar" />
		<pathelement location="${extra_lib.dir}/xsdlib.jar" />
	</path>

	<path id="junit.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/lib/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />

		<path refid="app.classpath" />
	</path>



	<!-- struts test case related properties -->
	<property name="catissue.test" value="${base.dir}/CaTissue_TestCases" />
	<property name="cat.test.classes.dir" value="${catissue.test}/classes" />
	<property name="cat.test.src.dir" value="${catissue.test}/src"/>
	<property name="cat.test.lib.dir" value="${catissue.test}/lib"/>
	<property name="cat.cobertura.dir" value="${base.dir}" />
	<property name="cat.instrumented.dir" value="./instrument"/>
	<property name="cobertura.lib" value="./cobertura/lib"/>



	<path id="cobertura.classpath">
		<fileset dir="${cobertura.lib}">
			<include name="cobertura.jar" />
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

	<!-- sub tasks -->
	<target name="init" description="initialize">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${target.dir}" />
		<!-- Create the temp directory for caCORE CSM war file-->
		<mkdir dir="${temp.dir}"/>
		<antcall target="check.java.version">
		</antcall>
		<copy todir="${base.dir}/custom_impl_lib" overwrite="true">
			<fileset file="Default_label_barcode_gen.jar" />
			<fileset file="label_barcode_gen_client.jar" />
			<fileset file="WEB-INF/lib/IDPAuthenticationManager0_0.jar" />
		</copy>
	</target>

	<target name="Catissue_Cdms_Client_Integration" description="Creates a caTissue CDMS integration jar">
		<delete file="caTissueCdmsIntegration.jar" />

		<jar destfile="caTissueCdmsIntegration.jar">
			<fileset dir="${target.dir}" >
				<include name="**/ICatissueCdmsIntegrator.class"/>
				<include name="**/CatissueCdmsIntegrator.class"/>
				<include name="**/CatissueCdmsURLInformationObject.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="Label_BarCode_Generator_Client">
		<delete file="label_barcode_gen_client.jar" />

		<jar destfile="label_barcode_gen_client.jar">
			<fileset dir="${target.dir}" >
				<include name="**/LabelGenerator.class"/>
				<include name="**/LabelGeneratorFactory.class"/>
				<include name="**/BarcodeGenerator.class"/>
				<include name="**/BarcodeGeneratorFactory.class"/>
				<include name="**/LabelTokens.class"/>
				<include name="**/TokenFactory.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="Default_Label_BarCode_Generator"  depends ="Label_BarCode_Generator_Client,build_client_jar">
		<delete file="Default_label_barcode_gen.jar" />
		<jar destfile="Default_label_barcode_gen.jar">
			<!--  fileset dir="./catissuecore-properties" >
			<include  name="LabelGenerator.Properties" />
		</fileset -->
			<!-- fileset dir="." >
			<include name="label_barcode_gen_client.jar"/>
		</fileset -->

			<fileset dir="${target.dir}" >
				<include name="**/namegenerator/*"/>

				<exclude name="**/LabelGenerator.class"/>
				<exclude name="**/LabelGeneratorFactory.class"/>
				<exclude name="**/BarcodeGenerator.class"/>
				<exclude name="**/BarcodeGeneratorFactory.class"/>
				<exclude name="**/LabelTokens.class"/>
				<exclude name="**/TokenFactory.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>
	<target name="PrintService_Client">
		<delete file="printservice_client.jar" />

		<jar destfile="printservice_client.jar">
			<fileset dir="${target.dir}" >
				<include name="**/LabelPrinter.class"/>
				<include name="**/LabelPrinterFactory.class"/>
				<include name="**/PropertyHandler.class"/>
			</fileset>
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="PrintService_Module"  depends ="PrintService_Client,build_client_jar">
		<delete file="printservice_module.jar" />
		<jar destfile="printservice_module.jar">
			<fileset dir="${target.dir}" >
				<include name="**/printservicemodule/*"/>
				<exclude name="**/printservicemodule/PrintServiceImplementor.properties"/>
			</fileset>
			<!--<fileset dir="${target.dir}/edu/wustl/catissuecore/printservicemodule" >
						<include  name="PrintServiceImplementor.properties" />
			</fileset>-->
			<manifest>
				<attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
				<attribute name="SVN-URL" value="${dist.revision}" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete includeemptydirs="true">
			<fileset dir="${target.dir}">
				<include name="**/*" />
				<exclude name="CVS" />
			</fileset>
		</delete>
	</target>

	<!-- Compile all files, generated and hand-written -->
	<target name="compile" depends="init">
		<javac destdir="${target.dir}" includes="**/*.*" includeAntRuntime="false" debug="yes" target="1.6">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="./lib">
					<include name="j2ee.jar" />
				</fileset>
				<pathelement location="${ant.home}\lib\ant.jar"/>
			</classpath>
			<classpath refid="cobertura.classpath" />
		</javac>
		<copy todir="${target.dir}" overwrite="true">
			<fileset dir="${src.dir}" >
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
				<include name="**/*.vm" />
			</fileset>
		</copy>
	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_applet_jar" depends="compile">
		<delete>
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
				<exclude name="**/cab2bStandAlone.jar" />
				<exclude name="**/commonpackage.jar" />
				<exclude name="**/org-netbeans-graph.jar" />
				<exclude name="**/org-netbeans-graph-vmd.jar" />
				<exclude name="**/org-openide-util.jar" />
				<exclude name="**/DynamicExtensions.jar" />
				<include name="**/swingx-2006_10_08.jar" />
				<include name="**/struts.jar" />
				<include name="**/hibernate2.1.7c.jar" />
				<include name="**/odmg.jar"/>
				<exclude name="**/dagViewApplet.jar" />
			</fileset>
		</delete>

		<copy todir="${applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/QueryTree.class" />
				<include name="**/NodeSelectionListener.class" />
				<include name="**/StorageLocationViewListener.class" />
				<include name="**/TissueSiteTreeNodeListener.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/query">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/query">
				<include name="**/QueryTreeNodeMap.class" />
				<include name="**/TreeNodeData.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/storage">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/storage">
				<include name="**/GenerateTree.class" />
				<include name="**/StorageContainerGridObject.class" />
				<include name="**/StorageContainerTreeNode.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/tissuesite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/tissuesite">
				<include name="**/TissueSiteTreeNode.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/util/global">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/util/global">
				<include name="**/Constants.class" />
			</fileset>
		</copy>
		<copy todir="${applet.dir}/edu/wustl/catissuecore/vo">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/vo">
				<include name="**/TreeNode.class" />
				<include name="**/TreeNodeFactory.class" />
			</fileset>
		</copy>

		<jar taskname="buildJar" jarfile="${applet.dir}/QueryTree.jar">
			<fileset dir="${applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- Create the Applet JAR Ends-->

	<!-- Creates the WAR (Web Application Archive) file of the application -->
	<target name="build_war" depends="init, compile, unpack_cacore_war,replace_database_type,
		common_build_war,build_client_jar">

	</target>
	<!-- Create war file for installable zip file.Please us this target when creating installable zip.
		Note: database type is not replaced
	-->
	<target name="installable_build_war" depends="init, compile, unpack_cacore_war,common_build_war,build_client_jar">
	</target>

	<!-- build catissuecore war file which is common to above both targets -->
	<target name="common_build_war" depends ="Default_Label_BarCode_Generator,Catissue_Cdms_Client_Integration,PrintService_Module,create_war">
	</target>

	<!--Start of Integrating the Bulk Operation Module  -->
	<target name="integrate_bulk_operation" description="Start of Integrating the Bulk Operation Module">

		<echo>Integrating the  Bulk Operation Module</echo>
		<antcall target="unzip_bulkoperation_installable" />
		<ant  inheritAll="false" antfile="build.xml" target="bulkoperation_integrate_app">
			<property name="deploy.temp.dir" value="${basedir}"/>
			<property name="config.dir" value="${basedir}/catissuecore-properties"/>
			<property name="bulkoperation.base.dir" value="${basedir}/bulkoperation" />
		</ant>

		<!--Copying bulkOperation.properties file-->
		<copy todir="${basedir}/catissuecore-properties" overwrite="true">
			<fileset dir="${basedir}">
				<include name="bulkOperation.properties" />
			</fileset>
		</copy>
		<delete dir="${basedir}/bulkoperation" />

	</target>

	<target name="unzip_bulkoperation_installable" depends="bulkoperation_check_prerequisite" description="unzip the bulk operation zip">
		<unzip src="bulkoperator.zip" dest="${basedir}/bulkoperation" overwrite="true" />
	</target>

	<target name="bulkoperation_check_prerequisite" description="Check bulkoperation.zip file exists or not in base directory">
		<!--
			Check bulkoperation.zip file exists or not in base
			directory.
		-->
		<available file="${base.dir}/bulkoperator.zip" property="file.exists" value="false" />
		<if>
			<not>
				<isset property="file.exists" />
			</not>
			<then>
				<echo
					message="bulkoperation.zip file not found. It should be in base directory to deploy Bulk Operation."
					level="error" />
			</then>
			<else>
				<echo message="Bulk Operation is ready to use."/>
			</else>
		</if>
	</target>

	<!--End of Integrating the Bulk Operation Module  -->

	<target name="create_war">
		<delete file="catissuecore.war" />

		<antcall target="integrate_bulk_operation" />

		<copy todir="WEB-INF/lib" overwrite="true">
			<fileset dir="${base.dir}"  >
				<include name="Default_label_barcode_gen.jar" />
				<include name="label_barcode_gen_client.jar" />
				<include name="printservice_client.jar" />
				<include name="printservice_module.jar" />
				<include name="caTissueCdmsIntegration.jar" />
			</fileset>
		</copy>
		<delete file="caTissueCdmsIntegration.jar"/>
		<delete file="${base.dir}/MANIFEST.MF"/>
		<manifest file="${base.dir}/MANIFEST.MF">

			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Version" value="${application.name} ${application.version}"/>
			<attribute name="CSM-Version" value="${csm.version}"/>
			<attribute name="caCore-Version" value="${cacore.version}"/>
			<attribute name="Build-on" value="${TODAY}"/>
			<attribute name="SVN-URL" value="${dist.revision}" />

		</manifest>
		<replace dir="${base.dir}/WEB-INF/classes" propertyfile="caTissueInstall.properties">
			<include name ="log4j.properties"/>
			<replacefilter token="@@jbosshome@@" value="${jboss.server.url.linux}"/>
		</replace>
		<antcall target="copydeletedjars" >
			<param name="deleteFromDir" value="${base.dir}/WEB-INF/lib"  />
		</antcall>
		<antcall target="copydeletedjars" >
			<param name="deleteFromDir" value="${temp.dir}/catissuecorecsm"/>
		</antcall>
		<replace dir="${base.dir}/WEB-INF/classes"  propertyfile="caTissueInstall.properties">
			<include name ="ApplicationResources.properties"/>
			<include name ="ApplicationResources_cs_CZ.properties"/>
			<replacefilter token="@@application.environment@@" value="${application.environment}"/>
		</replace>
		<war destfile="catissuecore.war" webxml="WEB-INF/web.xml"
			duplicate="preserve" manifest="${base.dir}/MANIFEST.MF" >

			<fileset dir="${base.dir}">
				<!--include name="Applet/**" / -->
				<include name="css/**" />
				<include name="images/**" />
				<include name="jss/**" />
				<include name="deploytempCatissuecore/AdvanceQuery/dhtml/**"/>
				<include name="dhtml_comp/**" />
				<include name="newDhtmlx/**" />
				<include name="dhtmlx_suite/**" />
				<include name="dhtmlxSuite_v35/**" />
				<include name="pages/**" />
				<include name="flexclient/**" />
				<include name="runtime/**" />
				<include name="WEB-INF/**" />
				<include name="CDEConfig.xml" />
				<include name="CDEConfig.xsd" />
				<include name="ApplicationVersionInfo.txt" />
				<include name="client-config.wsdd" />
				<include name="Applet/**" />
				<include name="caTissue_Suite_User_Manual.pdf" />
				<include name="caTissue_Suite_User_Manual.doc" />
				<include name="caTissueSuite_v1_2_Technical_Guide.doc" />
				<include name="caTissueSuiteV11_UML.zip" />
				<include name="**/WEB-INF/classes/**/cdms/CdmsIntegratorImpl.class" />
				<include name="ParticipantConfigXMLTemplateRules.xml" />
				<exclude name="**/WEB-INF/classes/**/namegenerator/*"/>
				<exclude name="**/WEB-INF/classes/**/cdms/*"/>

				<exclude name="**/pages/subMenu/**" />
				<exclude name="**/log4j.properties" />
				<exclude name="**/WEB-INF/src*/**" />
				<exclude name="**/WEB-INF/lib/*.zip" />
				<exclude name="**/WEB-INF/lib/ant*.jar" />
				<exclude name="**/WEB-INF/lib/junit*.jar" />
				<!--<exclude name="**/WEB-INF/lib/dom4*.jar" />-->
				<exclude name="**/*servlet.jar*" />

				<exclude name="**/*hibernate2.jar*" />
				<exclude name="**/*jta.jar*" />
				<exclude name="**/CVS*" />
				<exclude name="**/WEB-INF/lib/jta.jar" />
				<!--exclude name="**/*build*"/>
				<exclude name="**/*log4j.jar*" />
				<exclude name="**/*WEB-INF*"/>
				<exclude name="**/.*"/>
				<exclude name="**/*.sql"/>
				<exclude name="**/catissuecorecsm.war"/>
				<exclude name="**/catissuecore.war"/>
				<exclude name="**/caTissue_Core_Installable.zip"/>
				<exclude name="**/caTissue_Core_Installable/**"/>
				<exclude name="**/caTISSUECore caCORE Client/**"/-->
			</fileset>
			<!-- Excluding unwanted jars -->

			<!-- change for csm related war -->
			<fileset dir="${temp.dir}/catissuecorecsm">
				<include name="**/WEB-INF/**"  />
				<include name="**/images/**" />
				<include name="**/log/**" />
				<include name="**/*" />

				<exclude name="**/WEB-INF/web.xml" />
				<exclude name="**/WEB-INF/classes/edu/wustl/catissuecore/domain/**" />
				<exclude name="**/WEB-INF/lib/csmapi.jar" />
				<exclude name="**/WEB-INF/lib/dom4*.jar" />
				<exclude name="**/WEB-INF/lib/jta.jar" />
				<exclude name="**/WEB-INF/lib/cglib*.jar" />
				<exclude name="**/META-INF/**" />
				<exclude name="Happy.jsp" />
				<exclude name="Criteria.jsp" />
				<exclude name="**/WEB-INF/classes/ApplicationSecurityConfig.xml"/>
			</fileset>
		</war>

	</target>

	<target name="copydeletedjars">
		<echo>deleting unneccesary jars from ${deleteFromDir}</echo>
		<delete failonerror="false" >
			<fileset dir="${deleteFromDir}">
				<include name="backport-util-concurrent-3.0.jar" />
				<include name="c3p0-0.8.4.5.jar" />
				<include name="c3p0-0.8.5.2.jar" />
				<include name="castor-1.0.2.jar" />
				<include name="cglib-2.1.jar" />
				<include name="commons-collections-2.1.1.jar" />
				<include name="commons-collections-3.1.jar" />
				<include name="commons-discovery-0.2.jar" />
				<include name="commons-fileupload.jar" />
				<include name="commons-lang-2.1.jar" />
				<include name="commons-logging-1.0.4.jar" />
				<include name="dom4*.jar" />
				<include name="ehcache-1.2.3.jar" />
				<include name="freemarker.jar" />
				<include name="jakarta-oro.jar" />
				<include name="uml-1.3.jar" />
				<include name="wsdl4j-1.5.1.jar" />
				<include name="xalan-2.4.0.jar" />
				<include name="p6spy.jar" />
				<include name="sdkClient.jar" />
				<include name="uuid-key-generator.jar" />
				<include name="wsdl4j.jar" />
				<include name="j2ee.jar" />
				<include name="caGrid-1.0-caDSR-client.jar" />
				<include name="caGrid-1.0-caDSR-common.jar" />
				<include name="caGrid-1.0-caDSR-stubs.jar" />
				<include name="caGrid-1.0-core.jar" />
				<include name="caGrid-1.0-data-common.jar" />
				<include name="caGrid-1.0-data-stubs.jar" />
				<include name="caGrid-1.0-data-utils.jar" />
				<include name="caGrid-1.0-fqp-client.jar" />
				<include name="caGrid-1.0-fqp-common.jar" />
				<include name="caGrid-1.0-fqp-stubs.jar" />
				<include name="caGrid-1.0-metadata-common.jar" />
				<include name="caGrid-1.0-metadata-security.jar" />
				<include name="caGrid-1.0-sdkQuery.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-client.jar" />
				<include name="caGrid-1.0-ServiceSecurityProvider-common.jar" />
				<include name="jboss-common-jdbc-wrapper.jar"/>
				<include name="mysql-connector-java-3.1.13-bin.jar"/>
				<!--<include name="ojdbc14.jar"/>-->
				<include name="boot.jar" />
				<include name="c3p0-0.9.0.jar" />
				<include name="catissuecore-client.jar" />
				<include name="experiment-client.jar" />
				<!--<include name="jboss-client.jar" />-->
				<include name="junit-4.1.jar" />
				<include name="mockobjects-core-0.09.jar" />
				<!--include name="mysql-connector-java-5.0.8-bin.jar" / -->
				<include name="openide-util.jar" />
				<include name="acrobat-core.jar" />
				<!-- removed to work printwebservice -->
				<include name="jaxrpc.jar" />
				<include name="saaj.jar" />
				<include name="jboss-jaxws.jar" />
			</fileset>

		</delete>
	</target>

	<target name="clean_temp_dir_csmwar" description="delete temp directory used for caCORE unpack">
		<!-- do delete ${temp.dir} -->
		<delete dir="${temp.dir}" />
		<delete file="${jboss.server.url}/deploy/catissuecorecsm.war" />
	</target>

	<!--Deploys the application war file at JBOSS server by coping it to deploy directory of application server-->
	<target name="deploy">
		<!--antcall target="clean" /-->
		<antcall target="compile" />
		<antcall target="create_war" />
		<!-- delete temp dir
			<antcall target="clean_temp_dir_csmwar" /
			-->

		<!--antcall target="cleanserver" /-->
		<!-- Not required to copy csm war file -->


		<copy file="catissuecore.war" todir="${jboss.server.url}/deploy" />
		<!-- <copy file="dynamicExtensions.war" todir="${jboss.server.url}/deploy" /> -->
		<copy file="caTissuePrintWebService.war" todir="${jboss.server.url}/deploy" />
		<sleep seconds="2" />
	</target>



	<!--
		Generates the Hibernate mapping (HBM) files which are used in mapping
		the domain objects to database schema of the application.
		This generates the HBM files from the XDoclet tags written in the domain object classes.
	-->
	<target name="generate_hbm" description="Generates Hibernate class descriptor files.">
		<!-- Define the hibernatedoclet task -->
		<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask">
			<classpath refid="xdoclet.classpath" />
		</taskdef>

		<!-- Execute the hibernatedoclet task -->
		<hibernatedoclet destdir="${src.dir}" excludedtags="@version,@author,@todo"
					     force="${generateforce}" mergedir="${src.dir}" verbose="false">
			<fileset dir="${src.dir}">
				<include name="**/domain/*.java" />
				<include name="**/cde/*.java" />
			</fileset>
			<hibernate version="2.0" />
		</hibernatedoclet>

		<!-- Upgrade grammar from Hibernate1 to Hibernate2 -->
		<replace dir="${src.dir}">
			<include name="**/domain/*.hbm.xml" />
			<include name="**/cde/*.hbm.xml" />
			<replacefilter token="readonly=" value="inverse=" />
			<replacefilter token="role=" value="name=" />
			<replacefilter token="hibernate-mapping.dtd" value="hibernate-mapping-2.0.dtd" />
		</replace>

		<copy todir="${hbm.dir}">
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain">
				<include name="*.hbm.xml" />
			</fileset>
			<fileset dir="${src.dir}/edu/wustl/common/cde">
				<include name="*.hbm.xml" />
			</fileset>
		</copy>

		<delete>
			<fileset dir="${src.dir}/edu/wustl/catissuecore/domain" includes="*.hbm.xml" />
			<fileset dir="${src.dir}/edu/wustl/common/cde" includes="*.hbm.xml" />
		</delete>
	</target>

	<target name="createJavaDoc">
		<javadoc destdir="${client.dir}/JavaDoc"
   			author="true"
   			version="true"
   			use="true"
   			windowtitle="JavaDoc">
			<fileset dir="${project.src.domain}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="create_zip_old" depends="createJavaDoc,installable_build_war">
		<property name="zip.dir" value="${base.dir}/caTISSUE_Plus_v${application.version}_Installable" />
		<property name="zip.file" value="${base.dir}/caTissue_Plus_v${application.version}_Installable.zip" />

		<delete file="${zip.file}" />
		<delete dir="${zip.dir}" />

		<mkdir dir="${zip.dir}" />

		<copy file="catissuecore.war" todir="${zip.dir}" overwrite="true" />
		<copy file="label_barcode_gen_client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="printservice_module.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="printservice_client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="${base.dir}/WEB-INF/lib/PrintCatissueCore_Client.jar" todir="${zip.dir}" overwrite="true" />
		<copy file="caTissuePrintWebService.war" todir="${zip.dir}" overwrite="true" />
		<!--<copy file="shippingtracking.zip" todir="${zip.dir}" overwrite="true" />-->
		<copy file="dynamicextensions.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="clientFormCreator.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="AdvanceQuery_Installable.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="bulkoperator.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="bulkOperation.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="caTissueCdmsIntegration.properties" todir="${zip.dir}" overwrite="true" />
		<!-- only single war file is being used so comment it -->
		<!-- <copy file="catissuecorecsm.war" todir="${zip.dir}" overwrite="true" /> -->
		<copy file="catissuecore-ds.xml" todir="${zip.dir}" overwrite="true" />

		<copy file="allTokens.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="caTissueInstall.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="Show_Hide_Forms.csv" todir="${zip.dir}" overwrite="true" />
		<copy file="Show_Hide_Forms.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="build-properties.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="mail.txt" todir="${zip.dir}" overwrite="true" />
		<copy file="MANIFEST.MF" todir="${zip.dir}" overwrite="true" />
		<copy file="deploy.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="DEDeploy.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="performance.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="properties-service.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="taggedvalues.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="paths.txt" todir="${zip.dir}" overwrite="true" />

		<copy todir="${zip.dir}/custom_impl_lib" overwrite="true">
			<fileset file="Default_label_barcode_gen.jar" />
			<fileset file="label_barcode_gen_client.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/IDPAuthenticationManager0_0.jar" />
		</copy>

		<copy todir="${zip.dir}/idp" overwrite="true">
			<fileset dir="${base.dir}/idp" />
		</copy>

		<copy todir="${zip.dir}/catissuecore-properties" overwrite="true">
			<fileset dir="${base.dir}/catissuecore-properties" />
		</copy>

		<copy todir="${zip.dir}/cacore_deployable" overwrite="true">
			<fileset dir="${base.dir}/cacore_deployable" />
		</copy>

		<!--copy file="dbunitbuild.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="CDEConfig.xml" todir="${zip.dir}" overwrite="true" />
		<copy todir="${zip.dir}/caTissueSuite_dbunit" overwrite="true">
					<fileset dir="${base.dir}/caTissueSuite_dbunit" />
		</copy -->

		<copy file="dbunit_temp.xml" todir="${zip.dir}" overwrite="true" />
		<copy todir="${zip.dir}/lib" overwrite="true">
			<fileset file="${base.dir}/extra_lib/ant-contrib.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/mysql-connector-java-5.0.8-bin.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/ojdbc14.jar" />
			<fileset file="${base.dir}/lib/dom4j-1.6.jar" />
			<fileset file="${base.dir}/lib/j2ee.jar" />
			<fileset file="${base.dir}/lib/log4j.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/sqljdbc.jar" />
		</copy>

		<copy todir="${zip.dir}/SQL" overwrite="true">
			<fileset dir="${base.dir}/SQL" >
				<exclude name="**/Permissible_values/*.ctl"/>
			</fileset>
		</copy>

		<!--delete dir="${zip.dir}/SQL/DBUpgrade" /-->

		<copy file="MySql_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="Oracle_DB_Creation.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="DBValidate_Suite1.0.sql" todir="${zip.dir}" overwrite="true" />
		<copy file="DBValidate_V1.2.0.1.sql" todir="${zip.dir}" overwrite="true" />
		<!-- <copy file="Sample-log4j.xml" todir="${zip.dir}" overwrite="true" /> -->
		<copy file="Sample-login-config.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="Sample-properties-service.xml" todir="${zip.dir}" overwrite="true" />

		
		<copy todir="${zip.dir}/images" overwrite="true">
			<fileset file="${base.dir}/images/InstitutionLogo.gif" />
		</copy>
		<copy todir="${zip.dir}/images/uIEnhancementImages" overwrite="true">
			<fileset file="${base.dir}/images/uIEnhancementImages/siteman_logo.gif" />
		</copy>
		<copy todir="${zip.dir}/catissue_de_integration_client" overwrite="true">
			<fileset dir="${base.dir}/catissue_de_integration_client" />
		</copy>

		<copy todir="${zip.dir}/caTissueSuite_Client" overwrite="true">
			<fileset dir="${base.dir}/caTissueSuite_Client" />
		</copy>

		<copy todir="${zip.dir}/BulkOperations" overwrite="true">
			<fileset dir="${base.dir}/BulkOperations" />
		</copy>
		<copy todir="${zip.dir}/minimalDataSharing" overwrite="true">
			<fileset dir="${base.dir}/minimalDataSharing" />
		</copy>
		<copy todir="${zip.dir}/CaTissueSuite_caGrid_Service" overwrite="true">
			<fileset dir="${base.dir}/CaTissueSuite_caGrid_Service" />
		</copy>
		<!-- DE grid service is not avaialbel in this buid so commenting this target -->
		<!--<copy todir="${zip.dir}/de_cagrid_services" overwrite="true">
			<fileset dir="${base.dir}/de_cagrid_services" />
		</copy>-->
		<!--- caTIES related files  start-->
		<copy todir="${zip.dir}/caTIES_conf" overwrite="true">
			<fileset dir="${base.dir}/caTIES_conf" />
		</copy>
		<copy file="Dataset.dtd" todir="${zip.dir}" overwrite="true" />
		<copy file="JniDeID.dll" todir="${zip.dir}" overwrite="true" />
		<copy file="gate.zip" todir="${zip.dir}" overwrite="true" />
		<copy file="deploycaties.xml" todir="${zip.dir}" overwrite="true" />
		<copy file="deploycaties.properties" todir="${zip.dir}" overwrite="true" />
		<!--- caTIES related files  end-->
		<!-- DE conf files -->
		<copy todir="${zip.dir}/DE_conf" overwrite="true">
			<fileset dir="${base.dir}/DE_conf" />
		</copy>
		<!-- DE conf files end -->
		<!-- Copying DEIntegration.war
		<copy file="deintegration.war" todir="${zip.dir}" overwrite="true" /> -->
		<!-- Copying CA model wars -->
		<copy file="CA.war" todir="${zip.dir}" overwrite="true" />
		<copy file="pathologySpecimen.war" todir="${zip.dir}" overwrite="true" />
		<copy file="pathologySCG.war" todir="${zip.dir}" overwrite="true" />
		<!-- Copying private public migrator directory -->
		<copy todir="${zip.dir}/private_public_migrator" overwrite="true">
			<fileset dir="${base.dir}/private_public_migrator" />
		</copy>
		<!-- Copying IISSettings directory -->
		<copy todir="${zip.dir}/IISSettings" overwrite="true">
			<fileset dir="${base.dir}/IISSettings" />
		</copy>
		<zip destfile="${zip.file}" basedir="${zip.dir}" />
		<delete dir="${zip.dir}" />
		<antcall target="create_API_client_zip">
		</antcall>
	</target>

	<target name="create_zip" depends="createJavaDoc,installable_build_war">
		<property name="zip.dir" value="${base.dir}/caTISSUE_Plus_v${application.version}_Installable" />
		<property name="zip.file" value="${base.dir}/caTissue_Plus_v${application.version}_Installable.zip" />

		<delete file="${zip.file}" />
		<delete dir="${zip.dir}" />
		<mkdir dir="${zip.dir}" />

		<copy file="README.txt" todir="${zip.dir}" overwrite="true" />

		<copy file="bulkoperator.zip" todir="${zip.dir}/modules/bulk_operations/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/bulk_operations/lib" overwrite="true">
			<fileset file="${base.dir}/WEB-INF/lib/bulkoperator.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/DynamicExtensions*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/castor-0.9.9.jar" />
			<fileset file="${base.dir}/caTissueSuite_Client/lib/catissuecore.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-logging.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-httpclient*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-codec*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/hibernate3.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/opencsv-1.8.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/struts.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-beanutils-1.8.3-1.0.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-digester3-3.0-1.0.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/xerces*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-digester*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commons-beanutils*.jar" />
		</copy>
		<copy file="bulkOperation.properties" todir="${zip.dir}/modules/bulk_operations/conf" overwrite="true" />
		<copy file="BulkOperations/conf/log4j.properties" todir="${zip.dir}/modules/bulk_operations/conf" overwrite="true" />
		<copy todir="${zip.dir}/modules/bulk_operations/conf" overwrite="true">
			<fileset dir="${base.dir}/BulkOperations/conf/">
				<include name="*.xml" />
			</fileset>
		</copy>

		<copy todir="${zip.dir}/modules/caGrid_service" overwrite="true">
			<fileset dir="${base.dir}/CaTissueSuite_caGrid_Service" />
		</copy>

		<!--Vivek: <copy dir="bulk_operations_upload" todir="${zip.dir}/modules/" overwrite="true" />-->
		<copy todir="${zip.dir}/modules/bulk_operations_upload" overwrite="true">
			<fileset dir="${base.dir}/bulk_operations_upload" />
		</copy>

		<copy todir="${zip.dir}/modules/report_scripts" overwrite="true">
			<fileset dir="${base.dir}/report_scripts" />
		</copy>

		<!--Vivek: <copy dir="insert_dashboard_queries" todir="${zip.dir}/modules/" overwrite="true" />-->
		<copy todir="${zip.dir}/modules/insert_dashboard_queries" overwrite="true">
			<fileset dir="${base.dir}/insert_dashboard_queries" />
		</copy>
		<!-- Rinku: Add Default and system dashboard item file to zip -->
		<copy todir="${zip.dir}" overwrite="true">
			<fileset file="${base.dir}/Default_cp_And_System_dashboard.csv" />
		</copy>
		

		<copy file="gate.zip" todir="${zip.dir}/modules/caTIES/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/caTIES/conf" overwrite="true">
			<fileset dir="${base.dir}/caTIES_conf" />
		</copy>
		<copy file="Dataset.dtd" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="JniDeID.dll" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<copy file="deploycaties_zip.xml" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />
		<rename src="${zip.dir}/modules/caTIES/conf/deploycaties_zip.xml" dest="${zip.dir}/modules/caTIES/conf/deploycaties.xml"/>
		<copy file="deploycaties.properties" todir="${zip.dir}/modules/caTIES/conf" overwrite="true" />

		<copy todir="${zip.dir}/modules/caTissue/images" overwrite="true">
			<fileset file="${base.dir}/images/defauleLogo.png" />
		</copy>
		
		<copy todir="${zip.dir}/modules/caTissue/images" overwrite="true">
			<fileset file="${base.dir}/images/InstitutionLogo.gif" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/images/uIEnhancementImages" overwrite="true">
			<fileset file="${base.dir}/images/uIEnhancementImages/siteman_logo.gif" />
		</copy>
		<copy file="catissuecore.war" todir="${zip.dir}/modules/caTissue/lib" overwrite="true" />
		<copy todir="${zip.dir}/modules/caTissue/lib" overwrite="true">
			<fileset file="${base.dir}/extra_lib/ant-contrib.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/mysql-connector-java-5.0.8-bin.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/ojdbc14.jar" />
			<fileset file="${base.dir}/lib/dom4j-1.6.jar" />
			<fileset file="${base.dir}/lib/j2ee.jar" />
			<fileset file="${base.dir}/lib/log4j.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/sqljdbc.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/commonpackage*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/DAO*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/ParticipantManager*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/washu-commons*.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/securityManager*.jar" />
			<fileset file="${base.dir}/lib/liquibase.jar" />
		</copy>
		<copy todir="${zip.dir}/modules/caTissue/conf/catissuecore-properties" overwrite="true">
			<fileset dir="${base.dir}/catissuecore-properties" />
		</copy>
		<copy file="allTokens.properties" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="caTissueInstall.properties" todir="${zip.dir}" overwrite="true" />
		<copy file="build-properties.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="mail.txt" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="MANIFEST.MF" todir="${zip.dir}" overwrite="true" />
		<copy file="deploy_zip.xml" todir="${zip.dir}" overwrite="true" />
		<rename src="${zip.dir}/deploy_zip.xml" dest="${zip.dir}/build.xml"/>
		<copy file="performance.properties" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="login-config.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="properties-service.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="taggedvalues.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="caTissueCdmsIntegration.properties" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" 
		/>
		<copy file="catissuecore-ds.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="Sample-login-config.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />
		<copy file="Sample-properties-service.xml" todir="${zip.dir}/modules/caTissue/conf" overwrite="true" />

		<copy todir="${zip.dir}/modules/custom_impl_lib" overwrite="true">
			<fileset file="Default_label_barcode_gen.jar" />
			<fileset file="label_barcode_gen_client.jar" />
			<fileset file="${base.dir}/WEB-INF/lib/IDPAuthenticationManager0_0.jar" />
		</copy>

		<copy file="dynamicextensions.zip" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="clientFormCreator.zip" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="${base.dir}/WEB-INF/lib/DynamicExtensions.jar"
			todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="DEDeploy_zip.xml" todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" />
		<rename src="${zip.dir}/modules/dynamic_extensions/conf/DEDeploy_zip.xml" dest="${zip.dir}/modules/dynamic_extensions/conf/DEDeploy.xml"/>
		<copy file="Show_Hide_Forms.xml" todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true" />
		<copy todir="${zip.dir}/modules/dynamic_extensions/conf" overwrite="true">
			<fileset dir="${base.dir}/DE_conf" />
		</copy>
		<copy file="CA.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="pathologySpecimen.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />
		<copy file="pathologySCG.war" todir="${zip.dir}/modules/dynamic_extensions/lib" overwrite="true" />

		<copy todir="${zip.dir}/modules/identity_provider_support/conf" overwrite="true">
			<fileset dir="${base.dir}/idp" />
		</copy>

		<copy todir="${zip.dir}/modules/minimal_data_sharing" overwrite="true">
			<fileset dir="${base.dir}/minimalDataSharing" />
		</copy>

		<copy file="printservice_module.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="printservice_client.jar" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="${base.dir}/WEB-INF/lib/PrintCatissueCore_Client.jar"
			todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />
		<copy file="caTissuePrintWebService.war" todir="${zip.dir}/modules/print_web_service/lib" overwrite="true" />

		<copy todir="${zip.dir}/modules/private_public_migrator" overwrite="true">
			<fileset dir="${base.dir}/private_public_migrator" />
		</copy>

		<copy file="AdvanceQuery_Installable.zip" todir="${zip.dir}/modules/query/lib" overwrite="true" />
		<copy file="taggedvalues.xml" todir="${zip.dir}/modules/query/conf" overwrite="true" />
		<copy file="paths.txt" todir="${zip.dir}/modules/query/conf" overwrite="true" />

		<copy todir="${zip.dir}/SQL" overwrite="true">
			<fileset dir="${base.dir}/SQL" >
				<exclude name="**/Permissible_values/*.ctl"/>
			</fileset>
		</copy>

		<zip destfile="${zip.file}" basedir="${zip.dir}" />
		<delete dir="${zip.dir}" />
		<antcall target="create_API_client_zip" />

	</target>

	<target name="create_API_client_zip">
		<property name="APIclientzip.dir" value="${base.dir}/caTISSUE_Plus_API_Client_v${application.version}_Installable" />
		<property name="APIclientzip.file" value="${base.dir}/caTissue_Plus_API_Client_v${application.version}_Installable.zip" />
		<delete file="${APIclientzip.file}" />
		<delete dir="${APIclientzip.dir}" />
		<mkdir dir="${APIclientzip.dir}" />
		<copy todir="${APIclientzip.dir}/caTissueSuite_Client" overwrite="true">
			<fileset dir="${base.dir}/caTissueSuite_Client" />
		</copy>
		<copy todir="${APIclientzip.dir}/catissue_de_integration_client" overwrite="true">
			<fileset dir="${base.dir}/catissue_de_integration_client" />
		</copy>

		<zip destfile="${APIclientzip.file}" basedir="${APIclientzip.dir}" />
		<delete dir="${APIclientzip.dir}" />
	</target>


	<!-- =================================================================== -->
	<!-- Junit test case execution report                                    -->
	<!-- =================================================================== -->
	<target name="run_junit_testcases">
		<mkdir dir="${target.dir}/reports" />
		<mkdir dir="${target.dir}/reports/junit" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />

			<!--
					Specify the name of the coverage data file to use.
					The value specified below is the default.
 	     -->
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />


			<classpath>
				<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />
			</classpath>

			<classpath refid="junit.classpath" />

			<batchtest todir="${target.dir}/reports/junit">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>


	<target name="gen_report_junit_testcases">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="run_junit_testcases" />
		<mkdir dir="${report.dir}/reports/junit" />

		<junitreport todir="${report.dir}/reports/junit">
			<fileset dir="${target.dir}/reports/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/reports/junit" />
		</junitreport>
	</target>


	<!-- =================================================================== -->
	<!-- Junit TestCases for Nightly Build  -->
	<!-- =================================================================== -->

	<target name="compile_junit_TestCases">
		<javac destdir="${test.src.dir}" includes="**/*TestCases.java" includeAntRuntime="false" target="1.5">
			<src path="${src.dir}"/>
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>


	<target name="runJunitTestCases" depends="compile_junit_TestCases">
		<mkdir dir="${report.dir}/Nightly_Build_Report" />
		<mkdir dir="${report.dir}/Nightly_Build_Report/Html_reports" />

		<junit printsummary="yes" fork="yes" haltonfailure="no">
			<formatter type="xml" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.dir}/coverage.ser" />
			<classpath>
				<pathelement path="${base.dir}/caTissueSuite_Client/conf" />
				<fileset dir="./caTissueSuite_Client/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>

			<classpath>
				<pathelement path="${cobertura.dir}" />
				<pathelement path="${target.dir}" />
				<pathelement path= "${test.class.dir}" />
			</classpath>

			<classpath refid="junit.classpath" />

			<batchtest todir="${report.dir}/Nightly_Build_Report">
				<fileset dir="${src.dir}">
					<include name="**/CaTissueTestSuite.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>


	<target name="runNightlyBuild" depends="runJunitTestCases">

		<junitreport todir="${report.dir}/Nightly_Build_Report">
			<fileset dir="${report.dir}/Nightly_Build_Report">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}/Nightly_Build_Report/Html_reports" />
		</junitreport>
	</target>

	<!--  <property name="reportgenerator.input.jmeterfile" value="D:/Nightly_Build/XmlReport/CaTissueJMeterTests.jtl" />
		  <property name="reportgenerator.input.junitfile" value="D:/Nightly_Build/XmlReport/TESTS-TestSuites.xml" />
		  <property name="reportgenerator.output.file" value="D:/Nightly_Build/script/mail_setting.properties" />
	-->
	<property name="reportgenerator.input.junit_api_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_report.xml" />
	<property name="reportgenerator.input.junit_api_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_report.xml" />

	<property name="reportgenerator.input.junit_struts_mysql_fresh_file" value="${base.dir}/XmlReport/JUnitReports/mysql_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_mysql_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/mysql_upgrade_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_fresh_file" value="${base.dir}/XmlReport/JUnitReports/oracle_fresh_struts_report.xml" />
	<property name="reportgenerator.input.junit_struts_oracle_upgrade_file" value="${base.dir}/XmlReport/JUnitReports/oracle_upgrade_struts_report.xml" />

	<target name="GenerateNightlyBuildReport" depends="compile">
		<copy file="./TestResult.htm" todir="${base.dir}/XmlReport"/>
		<java classname="NightlyBuildReportGenerator" fork="true">
			<arg value="${reportgenerator.input.junit_api_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_api_oracle_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_mysql_upgrade_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_fresh_file}" />
			<arg value="${reportgenerator.input.junit_struts_oracle_upgrade_file}" />
			<classpath>
				<pathelement location="./WEB-INF/classes"/>
			</classpath>

		</java>
	</target>

	<!-- =================================================================== -->
	<!-- Cobertura code coverage report                                      -->
	<!-- =================================================================== -->
	<path id="cobertura.classpath">
		<pathelement location="${junit.jar}" />
		<pathelement location="${target.dir}" />
		<pathelement location="${base.dir}/cobertura/cobertura.jar" />
		<pathelement location="${base.dir}/cobertura/lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-2.2.1.jar" />
		<pathelement location="${base.dir}/cobertura/lib/asm-tree-2.2.1.jar" />
		<path refid="app.classpath" />
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	<target name="instrument">
		<delete dir="./cobertura/instrumented" />
		<delete file="${jboss.home.dir}/bin/cobertura.ser" />
		<mkdir dir="./cobertura/instrumented" />
		<!--
	       Instrument the application classes, writing the
	       instrumented classes into ${build.instrumented.dir}.
	    -->
		<cobertura-instrument datafile="${jboss.home.dir}/bin/cobertura.ser"
			todir="./cobertura/instrumented">
			<!--
	         The following line causes instrument to ignore any
	         source line containing a reference to log4j, for the
	         purposes of coverage reporting.
	      -->
			<ignore regex="org.apache.log4j.*" />
			<classpath refid="cobertura.classpath" />
			<fileset dir="./WEB-INF/classes">
				<include name="**/*.class" />
			</fileset>

		</cobertura-instrument>
		<echo>Copying instrumented class files to classes folder</echo>
		<copy todir="./WEB-INF/classes">
			<fileset dir="./cobertura/instrumented">
				<include name="**/*.class" />
			</fileset>
		</copy>
	</target>

	<target name="build_war_cobertura" depends="init, compile, instrument,
		build_war_cobertura_post_compilation">
	</target>

	<target name="build_war_cobertura_post_compilation" depends="unpack_cacore_war,replace_database_type,
		common_build_war,build_client_jar">
	</target>

	<target name="gen_report_cobertura">
		<cobertura-report datafile="./cobertura/cobertura.ser"
			srcdir="${src.dir}" destdir="./cobertura/reports/coverage" format="html" />
		<delete file="./cobertura/cobertura.ser" />
	</target>

	<!-- Create the Applet JAR Begins-->

	<target name="build_catissue_applet_jar" depends="build_catissue_applet_compile">
		<mkdir dir="${catissue.applet.dir}"/>
		<delete>
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</delete>
		<!-- Mandar : 30Oct06 : Image Folder -->
		<copy todir="${catissue.applet.dir}/images">
			<fileset dir="${base.dir}/images">
				<include name="**/*"/>
			</fileset>
		</copy>

		<copy todir="${catissue.applet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/applet/**" />
				<include name="**/edu/wustl/catissuecore/util/global/Constants.class" />
				<include name="**/edu/wustl/common/util/global/Validator.class" />
				<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.class" />
			</fileset>
		</copy>
		<jar taskname="buildJar" jarfile="${applet.dir}/CaTissueApplet.jar">
			<fileset dir="${catissue.applet.dir}">
				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		<delete includeemptydirs="true">
			<fileset dir="${catissue.applet.dir}">
				<include name="**/*" />
				<exclude name="**/CVS*" />
			</fileset>
		</delete>
	</target>

	<!-- compilation using jdk1.3 -->
	<target name="build_catissue_applet_compile" depends="init">
		<javac destdir="${target.dir}" includeAntRuntime="false" fork="yes" executable="D:/jdk1.3/bin/javac" compiler="javac1.3">
			<src path="${src.dir}"/>
			<include name="**/edu/wustl/catissuecore/applet/**" />
			<include name="**/edu/wustl/catissuecore/util/global/Constants.java" />
			<include name="**/edu/wustl/common/util/global/Validator.java" />
			<include name="**/edu/wustl/catissuecore/util/global/DefaultValueManager.java" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<!-- unpack caCORE war into temp folder -->
	<target name="unpack_cacore_war" depends ="clean_temp_dir_csmwar">
		<unwar src="${base.dir}/catissuecorecsm.war" dest="${temp.dir}/catissuecorecsm"/>
		<delete file="${temp.dir}/catissuecorecsm/WEB-INF/lib/jboss-common-jdbc-wrapper.jar" />
		<!--
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name ="orm1.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}"/>
				</replace>
			</then>
		</if>

		<if>
				<equals arg1="oracle" arg2="${database.type}"/>
				<then>
					<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties">
						<include name ="orm1.cfg.xml"/>
						<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}"/>
					</replace>
				</then>
		</if>
		-->
	</target>

	<target name="replace_database_type">
		<if>
			<equals arg1="mysql" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name ="orm1.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${mysql.dialect.h3.string}"/>
				</replace>
			</then>
		</if>

		<if>
			<equals arg1="oracle" arg2="${database.type}"/>
			<then>
				<replace dir="${temp.dir}/catissuecorecsm/WEB-INF/classes" propertyfile="caTissueInstall.properties">
					<include name ="orm1.cfg.xml"/>
					<replacefilter token="@@dialect@@" value="${oracle.dialect.h3.string}"/>
				</replace>
			</then>
		</if>
	</target>

	<!-- build catissuecore client jar to content latest domain classes & put inside client lib folder-->
	<target name="build_client_jar">
		<jar taskname="buildClientJar" jarfile="${temp.dir}/catissuecore.jar">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/client/**"/>
				<include name="**/edu/wustl/catissuecore/bean/**"/>
				<include name="**/edu/wustl/catissuecore/namegenerator/**"/>
				<include name="**/edu/wustl/catissuecore/caties/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/cdms/integrator/**"/>

				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
		<delete>
			<fileset dir="${base.dir}/caTissueSuite_Client/lib">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
				<include name="bulkoperator.jar"/>
			</fileset>
			<fileset dir="${base.dir}/CaTissueSuite_caGrid_Service/lib">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
				<include name="ParticipantManager*.jar"/>
			</fileset>
			<fileset dir="${base.dir}/catissue_de_integration_client/lib">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
			</fileset>
			<fileset dir="${base.dir}/private_public_migrator/lib">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
			</fileset>
		</delete>
		<copy todir="${base.dir}/caTissueSuite_Client/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
				<include name="bulkoperator.jar"/>
			</fileset>
			<fileset dir="${temp.dir}">
				<include name="catissuecore.jar"/>
			</fileset>
		</copy>

		<copy todir="${base.dir}/CaTissueSuite_caGrid_Service/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="DAO*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
				<include name="ParticipantManager*.jar"/>
			</fileset>
			<fileset dir="${temp.dir}">
				<include name="catissuecore.jar"/>
			</fileset>
		</copy>

		<copy todir="${base.dir}/catissue_de_integration_client/lib" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
			</fileset>
			<fileset dir="${temp.dir}">
				<include name="catissuecore.jar"/>
			</fileset>
		</copy>

		<copy todir="${base.dir}/private_public_migrator/lib" overwrite="true">
			<fileset dir="${temp.dir}">
				<include name="catissuecore.jar"/>
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="commonpackage*.jar"/>
				<include name="washu-commons*.jar"/>
				<include name="DAO*.jar"/>
				<include name="DynamicExtensions*.jar"/>
				<include name="SimpleQuery*.jar"/>
				<include name="securityManager*.jar"/>
				<include name="AdvanceQuery*.jar"/>
			</fileset>
		</copy>

	</target>

	<target name="sendMail"  description="Send mail">
		<mail ssl="off" user="${proxy.username}" password="${proxy.password}" mailhost="${proxy.host}" tolist="${proxy.to}" cclist="${proxy.cc}" subject="${proxy.subject}" from="${proxy.from}" >
			<message> "${proxy.message}"</message>
			<fileset dir="${proxy.dir1}" includes="*.*" >
			</fileset>
			<fileset dir="${proxy.dir2}" includes="${proxy.fileName}" >
			</fileset>
		</mail>
	</target>

	<!-- Create the Applet JAR Begins-->
	<target name="build_dagViewApplet_jar" depends="compile">
		<delete dir="${dagviewapplet.dir}" />
		<mkdir dir="${dagviewapplet.dir}" />
		<copy todir="${applet.dir}" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="**/cab2bStandAlone.jar" />
				<include name="**/commonpackage.jar" />
				<include name="**/org-netbeans-graph.jar" />
				<include name="**/org-netbeans-graph-vmd.jar" />
				<include name="**/org-openide-util.jar" />
				<include name="**/DynamicExtensions.jar" />
				<include name="**/swingx-2006_10_08.jar" />
				<include name="**/struts.jar" />
				<include name="**/hibernate2.1.7c.jar" />
				<include name="**/odmg.jar"/>
				<include name="**/log4j.jar"/>
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/images">
			<fileset dir="${base.dir}/images/dagViewImages">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui/querysuite">
				<include name="**/*.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/ui">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/ui">
				<include name="**/BaseApplet.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
				<include name="**/BaseAppletModel.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/model">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/model">
				<include name="**/AppletModelInterface.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet">
				<include name="**/AppletServerCommunicator.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/bizlogic/querysuite">
				<include name="**/GenerateHtmlForAddLimitsBizLogic.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/applet/util">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/applet/util">
				<include name="**/CommonAppletUtil.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}/edu/wustl/catissuecore/util/querysuite">
			<fileset dir="${target.dir}/edu/wustl/catissuecore/util/querysuite">
				<include name="**/QueryModuleUtil.class" />
			</fileset>
		</copy>
		<copy todir="${dagviewapplet.dir}">
			<fileset dir="${target.dir}">
				<include name="**/dynamicUI.xml" />
			</fileset>
		</copy>
		<jar taskname="buildJar" jarfile="${applet.dir}/dagViewApplet.jar">
			<fileset dir="${dagviewapplet.dir}">
				<include name="**/**" />
			</fileset>
		</jar>
		<delete dir="${dagviewapplet.dir}" />
	</target>
	<!-- Create the Applet JAR Ends-->

	<target name="build_DomainObject_jar" depends="compile" description="To create jar which contains domain object along with its hbm file. This is required for Query Metedata loading.">
		<jar taskname="buildJar" jarfile="${base.dir}/catissueDomain.jar">
			<fileset dir="${target.dir}">
				<include name="**/*.hbm.xml" />
				<include name="**/edu/wustl/catissuecore/domain/**" />
				<include name="**/edu/wustl/catissuecore/actionForm/**" />
				<include name="**/edu/wustl/catissuecore/bean/**" />
			</fileset>
		</jar>
	</target>

	<target name="build_jar_for_clinportal">
		<mkdir dir="${base.dir}/caTissueCore_Jar/temp"/>
		<copy  todir="${base.dir}/caTissueCore_Jar/temp">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/action/**"/>
				<include name="**/edu/wustl/catissuecore/bizLogic/**"/>
			</fileset>
		</copy>

		<delete >
			<fileset dir="${base.dir}/caTissueCore_Jar/temp">
				<include name="**/edu/wustl/catissuecore/action/annotations/**"/>
			</fileset>
		</delete>

		<jar taskname="buildJar" jarfile="${base.dir}/caTissueCore_Jar/catissuecore.jar">
			<fileset dir="${base.dir}/caTissueCore_Jar/temp"/>
		</jar>
		<delete dir="${base.dir}/caTissueCore_Jar/temp"/>

	</target>

	<property name="filename" value="" />
	<property name="hookentity" value="" />
	<property name="condition" value="" />
	<property name="package" value="" />

	<target name="import_xmi">
		<java classname="edu.wustl.catissuecore.annotations.xmi.ImportXmi" fork="true">
			<arg value="${filename}"/>
			<arg value="${hookentity}"/>
			<arg value="${condition}"/>
			<arg value="${package}"/>
			<classpath>
				<pathelement location="${target.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>
	<target name="export_xmi" depends="compile" >
		<java classname="edu.wustl.catissuecore.annotations.xmi.XMIExporter" fork="true">
			<arg value="${groupname}"/>
			<arg value="${filename}"/>
			<arg value="${version}"/>
			<classpath>
				<pathelement location="${target.dir}"/>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</java>
	</target>

	<!-- flex related targets -->
	<taskdef resource="flexTasks.tasks" classpath="${basedir}/extra_lib/flexTasks.jar" />

	<target name="compile_dag_flex">
		<mxmlc file="${FLEX_APP_ROOT}/dag/Dag.mxml" keep-generated-actionscript="true">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<source-path path-element="${FLEX_HOME}/frameworks"/>
		</mxmlc>
	</target>

	<target name="compile_multiplespecimen_flex">
		<mxmlc file="${FLEX_APP_ROOT}/multiplespecimen/MultipleSpecimen.mxml" keep-generated-actionscript="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>

			<source-path path-element="${FLEX_HOME}/frameworks"/>
			<compiler.library-path dir="${flex.dir}" append="true">
				<include name="libs" />
			</compiler.library-path>

		</mxmlc>
	</target>
	<target name="compile_layout_flex">
		<mxmlc file="${FLEX_APP_ROOT}/biospecimen/Layout.mxml"  keep-generated-actionscript="false">
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
			<compiler.library-path dir="${flex.dir}" append="true">
				<include name="libs/AutoComplete.swc" />
			</compiler.library-path>
		</mxmlc>
	</target>
	<!-- flex related target finish -->

	<!-- shippingtracking - start -->
	<target name="build_client_jar_for_st">
		<jar taskname="buildClientJar" jarfile="${temp.dir}/catissuecore.jar">
			<fileset dir="${target.dir}">
				<include name="**/edu/wustl/catissuecore/domain/**"/>
				<include name="**/edu/wustl/catissuecore/actionForm/**"/>
				<include name="**/edu/wustl/catissuecore/util/**"/>
				<include name="**/edu/wustl/catissuecore/client/**"/>
				<include name="**/edu/wustl/catissuecore/bean/**"/>
				<include name="**/edu/wustl/catissuecore/namegenerator/**"/>
				<include name="**/edu/wustl/catissuecore/caties/**"/>
				<include name="**/edu/wustl/catissuecore/hbm/**"/>
				<include name="**/edu/wustl/catissuecore/bizlogic/**"/>

				<exclude name="**/CVS*" />
				<exclude name="**/java.policy.applet*" />
			</fileset>
		</jar>
	</target>
	<!-- shippingtracking - end -->

	<target name="check.java.version"
	            description="checks if the version of java is the correct one">
		<echo>${java.version}</echo>
		<if>
			<contains string="${java.version}" substring="${java.required.version}"/>
			<!--equals arg1="${java.version}" arg2="1.5"/>-->
			<then>

			</then>
			<else>
				<fail message="Wrong Java version! [${java.version}] Required version: ${java.required.version}"/>
			</else>
		</if>
	</target>

	<target name="bulkoperation_integrate_app" description="deploys the Bulk Operation module">
		<property name="suite.struts.config.file" value="struts-config.xml" />
		<property name="suite.hibernate.config.file" value="hibernate.cfg.xml" />
		<property name="suite.tiles.def.file" value="tiles-defs.xml" />
		<!--Copying css files -->
		<copy todir="${deploy.temp.dir}/css" overwrite="false">
			<fileset file="${bulkoperation.base.dir}/css/bulkOperator.css" />
		</copy>

		<!--Copying jss files -->
		<copy todir="${deploy.temp.dir}/jss" overwrite="false">
			<fileset file="${bulkoperation.base.dir}/jss/bulkOperatorAjax.js" />
			<fileset file="${bulkoperation.base.dir}/jss/bulkOperatorScripts.js" />
		</copy>

		<!--Copying struts config and tiles defs files -->
		<copy todir="${deploy.temp.dir}/WEB-INF" overwrite="true">
			<fileset file="${bulkoperation.base.dir}/bulkoperation-struts-config.xml" />
			<fileset file="${bulkoperation.base.dir}/bulkoperation-tiles-defs.xml" />
		</copy>
		<copy file="${deploy.temp.dir}/WEB-INF/classes/BulkOperations.properties" todir="${deploy.temp.dir}/bulkoperation" overwrite="true" />
		<property file="${deploy.temp.dir}/bulkoperation/BulkOperations.properties" />
		<replace dir="${bulkoperation.base.dir}/pages/" propertyfile="bulkoperation/BulkOperations.properties">
			<include name="JobGridDashboard.jsp" />
			<replacefilter token="@@dhtml_dir@@" value="${dhtmlPath}" />
		</replace>

		<!--Copying JSP Pages -->
		<copy todir="${deploy.temp.dir}/pages/content/manageBioSpecimen/bulkOperations" overwrite="true">
			<fileset file="${bulkoperation.base.dir}/pages/BulkOperation.jsp" />
			<fileset file="${bulkoperation.base.dir}/pages/JobGridDashboard.jsp" />
			<fileset file="${bulkoperation.base.dir}/pages/BulkTemplate.jsp" />
		</copy>
		<!--
					Inject "/WEB-INF/bulkoperator-tiles-defs.xml" entry in suite
					struts-config.xml
				-->
		<replace file="${deploy.temp.dir}/WEB-INF/${suite.struts.config.file}">
			<replacefilter token="/WEB-INF/${suite.tiles.def.file}, /WEB-INF/bulkoperation-struts-config.xml" value="/WEB-INF/${suite.tiles.def.file}" />
			<replacefilter token="/WEB-INF/${suite.tiles.def.file}" value="/WEB-INF/${suite.tiles.def.file}, /WEB-INF/bulkoperation-tiles-defs.xml" />
		</replace>

		<!-- Inject advancequery-struts-config.xml entry in suite web.xml -->
		<replace file="${deploy.temp.dir}/WEB-INF/web.xml">
			<replacefilter token="/WEB-INF/${suite.struts.config.file}, /WEB-INF/bulkoperation-struts-config.xml" value="/WEB-INF/${suite.struts.config.file}" />
			<replacefilter token="/WEB-INF/${suite.struts.config.file}" value="/WEB-INF/${suite.struts.config.file}, /WEB-INF/bulkoperation-struts-config.xml" />
		</replace>

		<!--
					Concatenating the AppplicationResource.properties file from
					Bulk Opeartion to Suite AppplicationResource.properties file
				-->
		<echo message="Concatenating the Application Resources Properties file" />
		<concat destfile="${deploy.temp.dir}/WEB-INF/classes/ApplicationResources.properties" append="true" fixlastline="true">
			<fileset file="${bulkoperation.base.dir}/ApplicationResources.properties" />
		</concat>
		<concat destfile="${deploy.temp.dir}/WEB-INF/classes/ApplicationResources_cs_CZ.properties" append="true" fixlastline="true">
			<fileset file="${bulkoperation.base.dir}/ApplicationResources_cs_CZ.properties" />
		</concat>

		<!--Copying mapping.xml file-->
		<copy todir="${config.dir}" overwrite="true">
			<fileset dir="${bulkoperation.base.dir}">
				<include name="mapping.xml" />
				<include name="bulkOperatorXMLTemplateRules.xml" />
				<include name="BulkOperations.xsd" />
			</fileset>

		</copy>

	</target>
</project>
